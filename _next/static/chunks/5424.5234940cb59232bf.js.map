{"version":3,"file":"static/chunks/5424.5234940cb59232bf.js","mappings":"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","sources":["webpack://_N_E/./containers/Home/components/PopupIntro/styled.ts","webpack://_N_E/./containers/Home/components/PopupIntro/index.tsx","webpack://_N_E/./containers/Home/hook/useDetectMobile.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import styled, { keyframes } from 'styled-components';\n\nconst zoomIn = keyframes`\n  from {\n    transform: scale(1);\n  }\n  to {\n    transform: scale(1.1);\n  }\n}`;\n\nexport const PopupIntroWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  left: 0;\n  top: 0;\n  z-index: 20;\n  pointer-events: auto;\n  transition: all 1s ease-out;\n  opacity: 1;\n  &.inactive {\n    pointer-events: none;\n    transform: scale(1.1);\n    opacity: 0;\n    z-index: -1;\n    img,\n    video {\n    }\n    .overlayClose {\n      display: none;\n    }\n  }\n\n  img,\n  video {\n    background-color: #000;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    /* pointer-events: none; */\n  }\n\n  img {\n    animation: ${zoomIn} 2s forwards;\n  }\n\n  .--mobile {\n    display: none;\n  }\n\n  @media (max-width: 640px) {\n    .--mobile {\n      display: block;\n    }\n    .--pc {\n      display: none;\n    }\n  }\n\n  .overlayClose {\n    position: absolute;\n    bottom: 1.5rem;\n    left: 0;\n    right: 0;\n    margin: auto;\n    width: max-content;\n    z-index: 10;\n    .close {\n      padding: 4px 32px;\n      border: 2px solid #ddd;\n      color: #ddd;\n      font-weight: 600;\n      font-size: 1rem;\n      text-align: center;\n      transition: all 0.15s ease-out;\n      cursor: pointer;\n      @media (hover: hover) and (pointer: fine) {\n        &:hover {\n          background: #ddd;\n          color: var(--color-text);\n        }\n      }\n    }\n  }\n`;\n","import { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectConfigPopupIntro,\n  selectConfigSoundProject,\n} from '@containers/Home/selectors';\nimport { useTourEventState } from '@containers/Home/global/TourStats';\nimport { useKrpano } from '@containers/Home/hook/useKrpano';\nimport { useMobileDetect } from '@containers/Home/hook/useDetectMobile';\nimport { PopupIntroWrapper } from './styled';\nimport dynamic from 'next/dynamic';\nimport { actions } from '@containers/Home/slice';\n\nconst ModalConfirm = dynamic(() => import('@components/ModalConfirm'));\n\nconst PopupIntro = memo(() => {\n  const dispatch = useDispatch();\n  const isMakeChange = useRef(false);\n  const videoRef = useRef<HTMLVideoElement>(null!);\n\n  const { checkDevice } = useMobileDetect();\n\n  const configSound = useSelector(selectConfigSoundProject);\n  const configPopupIntro = useSelector(selectConfigPopupIntro);\n\n  const [isAllowSound, setIsAllowSound] = useState(false);\n  const [visibleModalConfirm, setVisibleModalConfirm] = useState(false);\n\n  const {\n    onSetSoundOnScene,\n    isShowIconInfoPlace,\n    onShowInfoPlace,\n    onCloseDialogPostProject,\n  } = useKrpano({ krpanoRef: null });\n  const [tourEventStats, setTourEventState] = useTourEventState('state');\n\n  const onCloseModalConfirm = useCallback(() => {\n    videoRef?.current?.play();\n    setVisibleModalConfirm(false);\n  }, []);\n\n  const onOKModalConfirm = useCallback(() => {\n    if (videoRef.current) {\n      videoRef.current.muted = false;\n      videoRef.current.volume = 1;\n    }\n    setIsAllowSound(true);\n\n    onCloseModalConfirm();\n  }, [onCloseModalConfirm]);\n\n  const onClosePopupIntro = useCallback(() => {\n    if (videoRef?.current) videoRef?.current?.pause();\n    if (configPopupIntro?.type === 'post') onCloseDialogPostProject();\n    setTourEventState(prev => ({\n      ...prev,\n      isVisiblePopupIntro: false,\n    }));\n    if (configSound.on === undefined || configSound.on === null) {\n      if (isAllowSound) {\n        onSetSoundOnScene(true);\n        dispatch(actions.setConfigSoundProject({ on: true }));\n      }\n    }\n  }, [\n    dispatch,\n    configSound,\n    isAllowSound,\n    configPopupIntro,\n    onSetSoundOnScene,\n    setTourEventState,\n    onCloseDialogPostProject,\n  ]);\n\n  useEffect(() => {\n    if (tourEventStats.isVisiblePopupIntro === undefined) {\n      const isVisiblePopupIntro =\n        ((configPopupIntro?.type === 'image' &&\n          configPopupIntro?.imageDesktop) ||\n          (configPopupIntro?.type === 'video' &&\n            configPopupIntro?.videoDesktop) ||\n          (configPopupIntro?.type === 'post' && isShowIconInfoPlace)) &&\n        !!configPopupIntro?.isEnabled;\n      if (isVisiblePopupIntro) {\n        if (configPopupIntro?.type === 'post') {\n          onShowInfoPlace();\n          isMakeChange.current = true;\n        }\n        if (configPopupIntro?.type === 'video' && videoRef.current) {\n          // videoRef.current.volume = 1;\n          if (configSound.on && !configPopupIntro.mute) onOKModalConfirm();\n          else if (\n            (configSound.on === undefined || configSound.on === null) &&\n            !configPopupIntro.mute\n          )\n            setVisibleModalConfirm(true);\n          else {\n            videoRef.current.muted = true;\n            videoRef.current.autoplay = true;\n          }\n        }\n      }\n      setTourEventState(prev => ({ ...prev, isVisiblePopupIntro }));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (\n      tourEventStats.isVisiblePopupIntro &&\n      configPopupIntro?.isAutoClose &&\n      configPopupIntro?.type !== 'post'\n    )\n      setTimeout(\n        () => {\n          onClosePopupIntro();\n        },\n        +configPopupIntro?.timeAutoClose * 1000,\n      );\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tourEventStats.isVisiblePopupIntro, configPopupIntro]);\n\n  useEffect(() => {\n    if (\n      configPopupIntro?.type === 'post' &&\n      isMakeChange.current &&\n      !tourEventStats.visibleDialogPostProject &&\n      tourEventStats.isVisiblePopupIntro !== undefined\n    )\n      onClosePopupIntro();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tourEventStats.visibleDialogPostProject]);\n\n  return configPopupIntro?.type !== 'post' ? (\n    <PopupIntroWrapper\n      className={tourEventStats.isVisiblePopupIntro !== false ? '' : 'inactive'}\n    >\n      {configPopupIntro && configPopupIntro?.isEnabled && (\n        <>\n          {configPopupIntro?.type === 'image' && (\n            <>\n              <img\n                src={configPopupIntro?.imageDesktop}\n                alt=\"\"\n                className=\"--pc\"\n              />\n              <img\n                src={\n                  configPopupIntro?.imageMobile ||\n                  configPopupIntro?.imageDesktop\n                }\n                alt=\"\"\n                className=\"--mobile\"\n              />\n            </>\n          )}\n\n          {configPopupIntro?.type === 'video' && (\n            <>\n              {!checkDevice().isMobile() ? (\n                <video\n                  muted\n                  playsInline\n                  ref={videoRef}\n                  onEnded={onClosePopupIntro}\n                >\n                  <source\n                    src={configPopupIntro?.videoDesktop}\n                    type=\"video/mp4\"\n                  />\n                </video>\n              ) : (\n                <video\n                  muted\n                  playsInline\n                  ref={videoRef}\n                  onEnded={onClosePopupIntro}\n                  className=\"--mobile\"\n                  autoPlay={!!configPopupIntro.mute}\n                >\n                  <source\n                    src={\n                      (configPopupIntro?.videoMobile ||\n                        configPopupIntro?.videoDesktop) + '#t=0.001'\n                    }\n                    type=\"video/mp4\"\n                  />\n                </video>\n              )}\n            </>\n          )}\n\n          <div className=\"overlayClose\">\n            <div onClick={onClosePopupIntro} className=\"close\">\n              {configPopupIntro?.textClose || 'Close'}\n            </div>\n          </div>\n        </>\n      )}\n\n      {visibleModalConfirm && (\n        <ModalConfirm\n          visible={visibleModalConfirm}\n          onOK={onOKModalConfirm}\n          onCancel={onCloseModalConfirm.bind(this, false)}\n        />\n      )}\n    </PopupIntroWrapper>\n  ) : null;\n});\n\nexport default PopupIntro;\n","/* eslint-disable no-useless-escape */\nimport { useMemo, useCallback } from 'react';\n\nexport const useMobileDetect = () => {\n  const checkDevice = useCallback(() => {\n    const flagIsMobile =\n      typeof window === 'undefined'\n        ? 0\n        : window.matchMedia('only screen and (max-width: 760px)').matches;\n\n    const isMobile = () => flagIsMobile;\n\n    return {\n      isMobile,\n    };\n  }, []);\n\n  return useMemo(\n    () => ({\n      checkDevice,\n    }),\n    [checkDevice],\n  );\n};\n"],"names":["zoomIn","keyframes","PopupIntroWrapper","styled","div","withConfig","ModalConfirm","dynamic","__webpack_require__","e","then","bind","components_PopupIntro","memo","dispatch","useDispatch","isMakeChange","useRef","videoRef","checkDevice","useMobileDetect","configSound","useSelector","selectConfigSoundProject","configPopupIntro","selectConfigPopupIntro","useState","isAllowSound","setIsAllowSound","visibleModalConfirm","setVisibleModalConfirm","useKrpano","krpanoRef","onSetSoundOnScene","isShowIconInfoPlace","onShowInfoPlace","onCloseDialogPostProject","useTourEventState","tourEventStats","setTourEventState","onCloseModalConfirm","useCallback","current","play","onOKModalConfirm","muted","volume","onClosePopupIntro","pause","type","prev","_object_spread_props","_","_object_spread","isVisiblePopupIntro","undefined","on","actions","setConfigSoundProject","useEffect","imageDesktop","videoDesktop","isEnabled","mute","autoplay","isAutoClose","setTimeout","timeAutoClose","visibleDialogPostProject","jsx_runtime","jsxs","className","Fragment","jsx","img","src","alt","imageMobile","isMobile","video","playsInline","ref","onEnded","autoPlay","source","videoMobile","onClick","textClose","visible","onOK","onCancel","_this","flagIsMobile","window","matchMedia","matches","useMemo"],"sourceRoot":""}