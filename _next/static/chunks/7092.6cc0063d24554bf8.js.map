{"version":3,"file":"static/chunks/7092.6cc0063d24554bf8.js","mappings":"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","sources":["webpack://_N_E/./containers/Home/themes/ThemeCompact/ListScene.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import { selectListGroup } from '@containers/Home/selectors';\nimport { I_Scene } from '@containers/Home/types';\nimport React, { memo, useCallback, useMemo, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ListSceneWrapper } from './styled';\nimport dynamic from 'next/dynamic';\n\nconst Logo = dynamic(() => import('@containers/Home/components/Logo'));\nconst Copyright = dynamic(() => import('./Copyright'));\n\ninterface Props {\n  onChangeScene: (scene: I_Scene) => void;\n}\n\nexport const ListScene = memo(({ onChangeScene }: Props) => {\n  const containerRef = useRef<HTMLDivElement>(null!);\n  const listGroup = useSelector(selectListGroup);\n\n  const [isShowListScene, setIsShowListScene] = useState(false);\n  const [groupIndexSelected, setGroupIndexSelected] = useState<\n    number | undefined\n  >(undefined);\n\n  const groupSelected = useMemo(\n    () =>\n      groupIndexSelected !== undefined\n        ? listGroup.find((_, index) => index === groupIndexSelected)\n        : undefined,\n    [groupIndexSelected, listGroup],\n  );\n\n  const onToggleIsShowListScene = useCallback(() => {\n    setIsShowListScene(prev => !prev);\n  }, []);\n\n  return (\n    <ListSceneWrapper\n      ref={containerRef}\n      id=\"themeListScene\"\n      className={`${isShowListScene ? '' : 'inactive'} ${\n        groupIndexSelected !== undefined ? 'sceneCate--on' : ''\n      }`}\n    >\n      <div className=\"--toggler\" onClick={onToggleIsShowListScene}>\n        <i className=\"far fa-bars state-open\"></i>\n        <i className=\"far fa-times state-close\"></i>\n      </div>\n      <div className=\"--mainPanel\">\n        <Logo />\n        {(listGroup.length !== 1 ||\n          (listGroup.length === 1 && listGroup[0].name !== 'Uncategory')) && (\n          <div\n            className={`--sceneMenuWrapper ${\n              groupIndexSelected !== undefined ? 'active' : ''\n            }`}\n          >\n            <div\n              className={`sceneMenu ${\n                groupIndexSelected !== undefined ? 'active' : ''\n              }`}\n            >\n              <div className=\"--cateList\">\n                {listGroup.map((group, index) => (\n                  <div\n                    key={group.id}\n                    className=\"itemSceneCate\"\n                    onClick={() => setGroupIndexSelected(index)}\n                  >\n                    {/* <div className=\"--cateImg\">\n                      <img src=\"https://dev-assets.panoee.com/statics/uploads/user/5fea0bb197cd73c523237485/media/pano/preview/2000x_c0k2lIy9NgNudHC19MGl.webp\" alt=\"\" />\n                    </div> */}\n                    <span className=\"--cateTitle\">{group.name}</span>\n                  </div>\n                ))}\n              </div>\n              {groupIndexSelected !== undefined && (\n                <div className=\"sceneList\">\n                  <span\n                    className=\"--back\"\n                    onClick={() => setGroupIndexSelected(undefined)}\n                  >\n                    <i className=\"far fa-arrow-left\"></i>Back\n                  </span>\n                  <div className=\"--listing\">\n                    {groupSelected?.scenes?.map(scene => (\n                      <div\n                        key={scene.id}\n                        className=\"itemScene\"\n                        onClick={() => {\n                          onChangeScene(scene);\n                        }}\n                      >\n                        <img\n                          src={scene.screenshot || scene.media?.src_thumb || ''}\n                          alt=\"\"\n                        />\n                        <span>{scene.title}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n        <div className=\"--customLink\">\n          {listGroup.length === 1 &&\n            listGroup[0].name === 'Uncategory' &&\n            listGroup[0].scenes.map(scene => (\n              <div\n                key={scene.id}\n                className=\"itemMenuLink type-scene\"\n                onClick={() => {\n                  onChangeScene(scene);\n                }}\n              >\n                <img\n                  src={scene.screenshot || scene.media?.src_thumb || ''}\n                  alt=\"\"\n                />\n                <span>{scene.title}</span>\n              </div>\n            ))}\n        </div>\n        <Copyright />\n      </div>\n    </ListSceneWrapper>\n  );\n});\n\nexport default ListScene;\n"],"names":["Logo","dynamic","__webpack_require__","e","then","bind","Copyright","ListScene","memo","param","groupSelected","onChangeScene","containerRef","useRef","listGroup","useSelector","selectListGroup","useState","isShowListScene","setIsShowListScene","undefined","groupIndexSelected","setGroupIndexSelected","useMemo","find","_","index","onToggleIsShowListScene","useCallback","prev","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","ListSceneWrapper","ref","id","className","concat","div","onClick","jsx","i","length","name","map","group","span","scenes","scene","img","src","screenshot","media","src_thumb","alt","title","__webpack_exports__"],"sourceRoot":""}