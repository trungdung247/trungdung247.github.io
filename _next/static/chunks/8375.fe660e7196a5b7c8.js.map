{"version":3,"file":"static/chunks/8375.fe660e7196a5b7c8.js","mappings":"8OAOMA,EAASC,IAAQ,kBAAMC,EAAAC,CAAA,OAAAC,IAAA,CAAAF,EAAAG,IAAA,CAAAH,EAAA,kEACvBI,EAAOL,IAAQ,kBAAMM,QAAAC,GAAA,EAAAN,EAAAC,CAAA,OAAAD,EAAAC,CAAA,OAAAD,EAAAC,CAAA,OAAAD,EAAAC,CAAA,MAAAD,EAAAC,CAAA,OAAAD,EAAAC,CAAA,OAAAD,EAAAC,CAAA,OAAAD,EAAAC,CAAA,OAAAD,EAAAC,CAAA,SAAAC,IAAA,CAAAF,EAAAG,IAAA,CAAAH,EAAA,gEACzBO,IAAK,KAEDC,EAAYT,IAAQ,kBAAMC,EAAAC,CAAA,MAAAC,IAAA,CAAAF,EAAAG,IAAA,CAAAH,EAAA,kEAC1BS,EAAaV,IAAQ,kBAAMC,EAAAC,CAAA,OAAAC,IAAA,CAAAF,EAAAG,IAAA,CAAAH,EAAA,gEAA0BO,IAAK,KAOnDG,EAAeC,CAAAA,EAAAA,EAAAA,IAAAA,EAAK,SAAAC,CAAA,MAAGC,EAAAA,EAAAA,aAAAA,CAAeC,EAAAA,EAAAA,WAAAA,CAC3CC,EAAsBC,CAAAA,EAAAA,EAAAA,EAAAA,EAAYC,EAAAA,EAAyBA,EAEnBC,EAAAA,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,OAAhDC,EAAuCD,CAAAA,CAAAA,EAAAA,CAAtBE,EAAsBF,CAAAA,CAAAA,EAAAA,CAE9C,MACE,GAAAG,EAAAC,IAAA,EAACC,EAAAA,EAAmBA,CAAAA,CAACC,UAAWT,EAAsB,aAAe,aACnE,GAAAM,EAAAI,GAAA,EAAC3B,EAAAA,CAAOqB,gBAAiBA,IACzB,GAAAE,EAAAI,GAAA,EAACjB,EAAAA,CACCW,gBAAiBA,EACjBC,mBAAoBA,EACpBP,cAAeA,IAEjB,GAAAQ,EAAAI,GAAA,EAACrB,EAAAA,CAAKS,cAAeA,EAAeC,YAAaA,WAC9C,SAAAF,CAAA,MAAGc,EAAAA,EAAAA,SAAAA,OAAgB,GAAAL,EAAAI,GAAA,EAAChB,EAAAA,CAAWiB,UAAWA,SAInD,EAEAC,CAAAA,EAAA,QAAejB","sources":["webpack://_N_E/./containers/Home/themes/ThemeDefault/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import { memo, useState } from 'react';\nimport dynamic from 'next/dynamic';\nimport { I_Scene } from '@containers/Home/types';\nimport { ThemeDefaultWrapper } from './styled';\nimport { useSelector } from 'react-redux';\nimport { selectIsMatterportProject } from '@containers/Home/selectors';\n\nconst Header = dynamic(() => import('./Header'));\nconst Tour = dynamic(() => import('@containers/Home/components/Tour'), {\n  ssr: false,\n});\nconst ListScene = dynamic(() => import('./ListScene'));\nconst Controlbar = dynamic(() => import('./Controlbar'), { ssr: false });\n\ninterface Props {\n  onNextScene: () => void;\n  onChangeScene: (scene: I_Scene) => void;\n}\n\nexport const ThemeDefault = memo(({ onChangeScene, onNextScene }: Props) => {\n  const isMatterportProject = useSelector(selectIsMatterportProject);\n\n  const [isShowListScene, setIsShowListScene] = useState(false);\n\n  return (\n    <ThemeDefaultWrapper className={isMatterportProject ? 'matterport' : ''}>\n      <Header isShowListScene={isShowListScene} />\n      <ListScene\n        isShowListScene={isShowListScene}\n        setIsShowListScene={setIsShowListScene}\n        onChangeScene={onChangeScene}\n      />\n      <Tour onChangeScene={onChangeScene} onNextScene={onNextScene}>\n        {({ krpanoRef }) => <Controlbar krpanoRef={krpanoRef} />}\n      </Tour>\n    </ThemeDefaultWrapper>\n  );\n});\n\nexport default ThemeDefault;\n"],"names":["Header","dynamic","__webpack_require__","e","then","bind","Tour","Promise","all","ssr","ListScene","Controlbar","ThemeDefault","memo","param","onChangeScene","onNextScene","isMatterportProject","useSelector","selectIsMatterportProject","useState","isShowListScene","setIsShowListScene","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","ThemeDefaultWrapper","className","jsx","krpanoRef","__webpack_exports__"],"sourceRoot":""}