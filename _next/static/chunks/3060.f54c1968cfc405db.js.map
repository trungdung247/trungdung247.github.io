{"version":3,"file":"static/chunks/3060.f54c1968cfc405db.js","mappings":"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","sources":["webpack://_N_E/./containers/Home/components/Collaboration/index.tsx","webpack://_N_E/./containers/Home/components/Collaboration/styled.tsx","webpack://_N_E/./containers/Home/hook/useGeneralFunction.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import { useCollaborationMode } from '@containers/Home/global/TourStats';\nimport { useCommentScene } from '@containers/Home/hook/useCommentScene';\nimport useGeneralFunction from '@containers/Home/hook/useGeneralFunction';\nimport {\n  selectListScene,\n  selectSceneSelected,\n  selectTitleProject,\n} from '@containers/Home/selectors';\nimport { actions } from '@containers/Home/slice';\nimport dynamic from 'next/dynamic';\nimport { memo, useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CollaborationWrapper } from './styled';\nimport { I_CommentScene } from '@containers/Home/types';\n\nconst ListScene = dynamic(() => import('./ListScene'));\nconst ListComment = dynamic(() => import('./ListComment'));\nconst DialogCreateCommentScene = dynamic(\n  () => import('./CommentScene/DialogCreateCommentScene'),\n);\nconst LoadingContainer = dynamic(() => import('@components/LoadingContainer'));\n\nconst Collaboration = memo(() => {\n  const dispatch = useDispatch();\n  const [activeScreen, setActiveScreen] = useState('');\n  const { onNextScene } = useGeneralFunction();\n\n  const listScene = useSelector(selectListScene);\n  const titleProject = useSelector(selectTitleProject);\n  const sceneSelected = useSelector(selectSceneSelected);\n\n  const {\n    onCreateCommentScene,\n    onUpdateCommentScene,\n    onDeleteCommentScene,\n    listCommentSceneGroupByParent,\n    listCommentSceneGroupByParentActive,\n    listCommentSceneGroupByParentResolved,\n  } = useCommentScene();\n\n  const [isShowDialogCreateCommentScene, setIsShowDialogCreateCommentScene] =\n    useCollaborationMode('isShowDialogCreateCommentScene');\n  const [commentSceneTemporary] = useCollaborationMode('commentSceneTemporary');\n  const [krpanoInstance] = useCollaborationMode('krpanoRef');\n  const [, setCommentSceneSelected] = useCollaborationMode(\n    'commentSceneSelected',\n  );\n  const [loading] = useCollaborationMode('loading');\n\n  useEffect(() => {\n    if (krpanoInstance) {\n      listCommentSceneGroupByParent.forEach(item => {\n        krpanoInstance.onAddCommentScene(item);\n      });\n      krpanoInstance.call(`followmouse_disable();`);\n      krpanoInstance.set(\n        'cursors.standard',\n        `url(${process.env.NEXT_PUBLIC_ASSETS_URL}/core/comment.svg) 4 12, auto`,\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sceneSelected?._id, krpanoInstance]);\n\n  useEffect(\n    () => {\n      dispatch(\n        actions.setListCommentSceneSelected(sceneSelected?.commentScenes || []),\n      );\n      return () => {\n        dispatch(actions.setListCommentSceneSelected([]));\n        setCommentSceneSelected(null);\n      };\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [sceneSelected?._id],\n  );\n\n  const onBackToMainScreen = useCallback(() => setActiveScreen(''), []);\n\n  const onNavigateToDetailScreen = useCallback(\n    scene => {\n      setActiveScreen('detail');\n      onNextScene(scene);\n    },\n    [onNextScene],\n  );\n\n  const onCloseDialogCreateCommentScene = useCallback(() => {\n    setIsShowDialogCreateCommentScene(false);\n  }, [setIsShowDialogCreateCommentScene]);\n\n  const _onMoveToCommentScene = useCallback(\n    commentScene => {\n      function donecall() {\n        setCommentSceneSelected(null);\n      }\n      krpanoInstance?.focusOnCommentScene(commentScene, donecall);\n    },\n    [krpanoInstance, setCommentSceneSelected],\n  );\n\n  const _onSelectCommentScene = useCallback(\n    commentScene => {\n      function donecall() {\n        setCommentSceneSelected(commentScene);\n      }\n      krpanoInstance?.focusOnCommentScene(commentScene, donecall);\n    },\n    [krpanoInstance, setCommentSceneSelected],\n  );\n\n  const _onUpdateCommentScene = useCallback(\n    data => onUpdateCommentScene(data),\n    [onUpdateCommentScene],\n  );\n\n  const _onDeleteCommentScene = useCallback(\n    data => onDeleteCommentScene(data),\n    [onDeleteCommentScene],\n  );\n\n  const _onCreateCommentScene = useCallback(\n    data => {\n      const newComment = {\n        ...commentSceneTemporary,\n        message: data,\n      } as I_CommentScene;\n      onCreateCommentScene(newComment, krpanoInstance);\n    },\n    [krpanoInstance, onCreateCommentScene, commentSceneTemporary],\n  );\n\n  return (\n    <CollaborationWrapper>\n      <LoadingContainer loading={loading}>\n        {activeScreen === 'detail' ? (\n          <ListComment\n            listScene={listScene}\n            onNextScene={onNextScene}\n            titleProject={titleProject}\n            onBack={onBackToMainScreen}\n            sceneSelected={sceneSelected}\n            listCommentSceneGroupByParentActive={\n              listCommentSceneGroupByParentActive\n            }\n            listCommentSceneGroupByParentResolved={\n              listCommentSceneGroupByParentResolved\n            }\n            onMoveToCommentScene={_onMoveToCommentScene}\n            onSelectCommentScene={_onSelectCommentScene}\n            onUpdateCommentScene={_onUpdateCommentScene}\n            onDeleteCommentScene={_onDeleteCommentScene}\n          />\n        ) : (\n          <ListScene\n            listScene={listScene}\n            titleProject={titleProject}\n            sceneSelected={sceneSelected}\n            onNextScene={onNavigateToDetailScreen}\n          />\n        )}\n      </LoadingContainer>\n\n      <div className=\"--guide\">\n        <div className=\"--center\">\n          <i aria-hidden className=\"fas fa-info-circle\" />\n          <small>Double click into your scene to create comment</small>\n        </div>\n      </div>\n\n      {isShowDialogCreateCommentScene && (\n        <DialogCreateCommentScene\n          visible={isShowDialogCreateCommentScene}\n          onCancel={onCloseDialogCreateCommentScene}\n          onCreateCommentScene={_onCreateCommentScene}\n        />\n      )}\n    </CollaborationWrapper>\n  );\n});\n\nexport default Collaboration;\n","import { FlexRowStart } from '@styles/global-styles';\nimport styled from 'styled-components';\nimport { CommentSceneItemWrapper } from './CommentScene/styled';\n\nexport const CollaborationWrapper = styled.div`\n  width: 30%;\n  max-width: 360px;\n  height: 100%;\n  background: var(--color-dark);\n  padding: 12px;\n  position: relative;\n  .--guide {\n    padding: 8px 12px;\n    background: var(--color-dark);\n    color: #fff;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    max-width: 100%;\n    border-top: 1px solid rgba(255, 255, 255, 0.2);\n    line-height: initial;\n    .--center {\n      display: flex;\n      width: max-content;\n      i {\n        margin-right: 8px;\n      }\n    }\n  }\n`;\n\nexport const ListSceneWrapper = styled.div`\n  color: #fff;\n  height: 100%;\n  .--header {\n    .--title {\n      font-weight: 600;\n      .ant-typography {\n        color: #fff;\n        font-size: 15px;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n    }\n  }\n  .--search {\n    margin: 8px 0;\n  }\n  .--body {\n    height: calc(100% - 100px);\n    overflow: auto;\n    .--list {\n      height: 100%;\n      .--item {\n        display: flex;\n        align-items: center;\n        padding: 10px 0;\n        cursor: pointer;\n        position: relative;\n        background: var(--color-dark-2);\n        color: #fff;\n        margin-bottom: 6px;\n        border-radius: 8px;\n        padding: 8px 4px;\n        transition: all 0.15s ease-out;\n        @media (hover: hover) and (pointer: fine) {\n          &:hover {\n            background: var(--color-dark-3);\n          }\n        }\n        .--left {\n          width: 140px;\n          margin-left: 4px;\n          .--thumb {\n            border-radius: 6px;\n            width: 100%;\n            height: 54px;\n            overflow: hidden;\n            img {\n              object-fit: cover;\n              width: 100%;\n              height: 100%;\n            }\n          }\n          margin-right: 12px;\n        }\n        .--right {\n          width: 100%;\n          .--info {\n            .mainTxt {\n              font-weight: 600;\n              display: -webkit-box;\n              -webkit-line-clamp: 2;\n              -webkit-box-orient: vertical;\n              overflow: hidden;\n            }\n            .subTxt {\n              opacity: 0.5;\n            }\n          }\n        }\n        &.active {\n          background: #fff;\n          color: initial;\n          .--left {\n            .--thumb {\n              box-shadow: 0 0 0 4px var(--color-theme);\n            }\n          }\n        }\n        &:not(:last-child) {\n        }\n      }\n    }\n  }\n`;\n\nexport const ListCommentWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  color: #fff;\n  .--header {\n    width: 100%;\n    display: flex;\n    .--left {\n      padding-right: 8px;\n      i {\n        cursor: pointer;\n        width: 24px;\n        height: 24px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        border-radius: 50%;\n        background: var(--color-dark-2);\n      }\n    }\n    .--right {\n      width: calc(100% - 40px);\n      .--title {\n        width: 100%;\n        font-weight: 600;\n        .ant-typography {\n          color: #fff;\n          font-size: 15px;\n        }\n      }\n      .--select {\n        width: max-content;\n        max-width: 100%;\n        background: var(--color-dark-2);\n        padding: 0px 4px;\n        border-radius: 6px;\n        .ant-select {\n          width: auto;\n          max-width: 100%;\n          &-single {\n            &.ant-select-show-arrow .ant-select-selection-item {\n              padding-right: 32px;\n            }\n          }\n          &-selector {\n            padding: 0;\n          }\n          color: #fff;\n          &-arrow {\n            color: #fff;\n            margin-left: 4px;\n          }\n        }\n      }\n    }\n  }\n\n  .--body {\n    height: 100%;\n    .ant-tabs {\n      .ant-tabs-ink-bar {\n        background: var(--color-theme);\n      }\n      color: #fff;\n      &-nav {\n        &:before {\n          border-bottom: 1px solid rgba(255, 255, 255, 0.25);\n        }\n        &-wrap,\n        &-list {\n          width: 100%;\n        }\n      }\n      .ant-tabs-tab-active {\n        color: var(--color-theme);\n      }\n      &-tab {\n        width: 100%;\n        + .ant-tabs-tab {\n          margin: 0;\n        }\n        &-btn {\n          width: 100%;\n          text-align: center;\n          color: inherit;\n        }\n      }\n    }\n    .--list {\n      max-height: 100%;\n      overflow: auto;\n      .--item {\n        display: flex;\n        padding: 12px 0;\n        .stt {\n          width: 24px;\n          height: 24px;\n          background: var(--color-dark-2);\n          color: #fff;\n          border-radius: 50%;\n          margin: 8px 8px 0 0;\n          font-size: 12px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          flex: 0 0 auto;\n        }\n        ${CommentSceneItemWrapper} {\n          .info {\n            cursor: pointer;\n            span {\n              margin-left: 8px;\n            }\n          }\n        }\n        .checkbox {\n          margin-left: 12px;\n          .ant-checkbox-inner {\n            background-color: unset;\n          }\n        }\n        &:not(:last-child) {\n          border-bottom: 1px solid rgba(255, 255, 255, 0.15);\n        }\n      }\n    }\n  }\n`;\n\nexport const DetailCommentWrapper = styled.div``;\n\nexport const SelectOptionWithImageWrapper = styled.div`\n  ${FlexRowStart};\n  color: inherit;\n  img {\n    width: 48px;\n    height: auto;\n    flex: 0 0 auto;\n    border-radius: 4px;\n    margin-right: 0.5rem;\n  }\n`;\n","import { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectListScene, selectSceneSelected } from '../selectors';\nimport { actions } from '../slice';\nimport { I_Scene } from '../types';\n\nconst useGeneralFunction = () => {\n  const dispatch = useDispatch();\n  const listScene = useSelector(selectListScene);\n  const sceneSelected = useSelector(selectSceneSelected);\n\n  const indexSceneSelected = useMemo(\n    () => listScene.findIndex(item => sceneSelected?.id === item.id),\n    [listScene, sceneSelected],\n  );\n\n  const nextScene = useMemo(\n    () =>\n      listScene.length\n        ? listScene[\n            indexSceneSelected === listScene.length - 1\n              ? 0\n              : indexSceneSelected + 1\n          ]\n        : undefined,\n    [indexSceneSelected, listScene],\n  );\n\n  const onNextScene = useCallback(\n    (_scene?: I_Scene) => {\n      if (\n        _scene &&\n        // _scene.id !== sceneSelected?.id &&\n        listScene.find(item => item.id === _scene.id)\n      ) {\n        dispatch(actions.setSceneSelected({ ..._scene, _id: _scene.id }));\n        dispatch(actions.setprevSceneSelected(sceneSelected || null));\n      }\n    },\n    [sceneSelected, listScene, dispatch],\n  );\n\n  return useMemo(\n    () => ({\n      nextScene,\n      onNextScene,\n    }),\n    [nextScene, onNextScene],\n  );\n};\n\nexport default useGeneralFunction;\n"],"names":["ListScene","dynamic","Promise","all","__webpack_require__","e","then","bind","ListComment","DialogCreateCommentScene","LoadingContainer","resolve","Collaboration","memo","dispatch","useDispatch","useState","activeScreen","setActiveScreen","onNextScene","useGeneralFunction","listScene","useSelector","selectListScene","titleProject","selectTitleProject","sceneSelected","selectSceneSelected","useCommentScene","onCreateCommentScene","onUpdateCommentScene","onDeleteCommentScene","listCommentSceneGroupByParent","listCommentSceneGroupByParentActive","listCommentSceneGroupByParentResolved","useCollaborationMode","isShowDialogCreateCommentScene","setIsShowDialogCreateCommentScene","commentSceneTemporary","krpanoInstance","setCommentSceneSelected","loading","useEffect","forEach","item","onAddCommentScene","call","set","concat","process","_id","actions","setListCommentSceneSelected","commentScenes","onBackToMainScreen","useCallback","onNavigateToDetailScreen","scene","onCloseDialogCreateCommentScene","_onMoveToCommentScene","commentScene","focusOnCommentScene","_onSelectCommentScene","_onUpdateCommentScene","data","_onDeleteCommentScene","_onCreateCommentScene","_swc_helpers_object_spread_props__WEBPACK_IMPORTED_MODULE_11__","_","_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_12__","message","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","CollaborationWrapper","jsx","onBack","onMoveToCommentScene","onSelectCommentScene","div","className","i","aria-hidden","small","visible","onCancel","__webpack_exports__","styled","withConfig","ListSceneWrapper","ListCommentWrapper","CommentSceneItemWrapper","SelectOptionWithImageWrapper","FlexRowStart","Z","indexSceneSelected","useMemo","findIndex","id","nextScene","length","undefined","_scene","find","setSceneSelected","_swc_helpers_object_spread_props__WEBPACK_IMPORTED_MODULE_4__","_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_5__","setprevSceneSelected"],"sourceRoot":""}