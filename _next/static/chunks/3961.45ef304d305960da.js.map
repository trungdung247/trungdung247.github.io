{"version":3,"file":"static/chunks/3961.45ef304d305960da.js","mappings":"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","sources":["webpack://_N_E/./containers/Home/components/Floorplan/Radar.tsx","webpack://_N_E/<anon>"],"sourcesContent":["/* eslint-disable react/no-danger */\n/* eslint-disable no-bitwise */\nimport { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { objectType } from '@type/index';\nimport {\n  useHLookatKrpano,\n  useZoomKrpano,\n} from '@containers/Home/global/TourStats';\nimport { separateColorAndTransparency } from '@utils/helper';\n\ninterface Props {\n  north: number;\n  borderWidth: number;\n  borderColor: string;\n  bgColor: string;\n  width: number;\n}\n\nconst Radar = memo(\n  ({ north = 0, borderWidth, borderColor, bgColor, width }: Props) => {\n    const svgRef = useRef<HTMLDivElement | null>(null);\n\n    const [radar, setRadar] = useState<any>();\n    const [hlookatKrpano] = useHLookatKrpano('hlookat');\n    const [zoomKrpano] = useZoomKrpano('zoom');\n\n    const onCreateSVG = useCallback(pixelWidth => {\n      // svg namespace\n      const ns = 'http://www.w3.org/2000/svg';\n\n      const svg = document.createElementNS(ns, 'svg');\n      svg.setAttribute('width', pixelWidth);\n      svg.setAttribute('height', pixelWidth);\n\n      svg.style.position = 'absolute';\n      svg.style.left = `${50}%`;\n      svg.style.top = `${50}%`;\n      svg.style.transform = `translate(-50%, -50%)`;\n      svg.style.zIndex = `1`;\n      // svg.style.border = \"1px solid red\";\t\t// DEBUG\n\n      const path = document.createElementNS(ns, 'path');\n\n      svg.appendChild(path);\n\n      const drawer: objectType = {};\n      drawer.svg = svg;\n      drawer.path = path;\n\n      drawer.setstyle = (\n        linecolor,\n        linewidth,\n        linealpha,\n        fillcolor,\n        fillalpha,\n      ) => {\n        path.setAttribute('stroke', linecolor);\n        path.setAttribute('stroke-width', linewidth);\n        path.setAttribute('stroke-opacity', linealpha);\n        path.setAttribute('fill', fillcolor);\n        path.setAttribute('fill-opacity', fillalpha);\n      };\n\n      drawer.drawpie = (cx, cy, r, von, bis) => {\n        let t1;\n        let t2;\n        let d = '';\n\n        // correct wrong order\n        if (von > bis) {\n          t1 = bis;\n          bis = von;\n          von = t1;\n        }\n\n        // remap to rad\n        von = (von * Math.PI) / 180;\n        bis = (bis * Math.PI) / 180;\n\n        // calc range and center\n        t2 = bis - von;\n        t1 = (von + bis) / 2;\n\n        // draw mode\n        const drawmode = t2 > Math.PI ? 1 : 0;\n\n        // check range\n        if (t2 >= 2 * Math.PI) t2 = 2 * Math.PI - 0.01;\n\n        // re-center\n        von = t1 - t2 / 2;\n        bis = t1 + t2 / 2;\n\n        // calc edges\n        const x1 = cx + r * Math.sin(von);\n        const y1 = cy - r * Math.cos(von);\n        const x2 = cx + r * Math.sin(bis);\n        const y2 = cy - r * Math.cos(bis);\n\n        // draw command\n        d = `M ${cx},${cy} L ${x1},${y1} A ${r},${r} 0 ${drawmode} 1 ${x2},${y2} Z`;\n\n        path.setAttribute('d', d);\n      };\n\n      return drawer;\n    }, []);\n\n    const onUpdateSVG = useCallback(() => {\n      const heading = -north;\n      const headingoffset = 0;\n\n      let radarrange = ((width - 2) / 2) * 1;\n\n      if (radarrange > 2000) radarrange = 2000;\n\n      const render_size = Math.ceil(2 * radarrange);\n      const dom_size = 2 + 0 * 2 + render_size;\n\n      // calculate cone offset and size\n      const hlookat = heading + headingoffset - 0 + (hlookatKrpano || 0);\n      const hfov = zoomKrpano || 0;\n      radar.drawpie(\n        dom_size / 2 - 0.5,\n        dom_size / 2 - 0.5,\n        radarrange,\n        hlookat - hfov * 0.5,\n        hlookat + hfov * 0.5,\n      );\n      if (svgRef.current) svgRef.current.appendChild(radar.svg);\n    }, [north, width, hlookatKrpano, zoomKrpano, radar]);\n\n    useEffect(() => {\n      if (hlookatKrpano !== undefined && zoomKrpano !== undefined) {\n        if (!radar) {\n          const newRadar = onCreateSVG(width);\n\n          const bg = separateColorAndTransparency(bgColor);\n          const border = separateColorAndTransparency(borderColor);\n          newRadar.setstyle(\n            border.color,\n            borderWidth,\n            border.alpha,\n            bg.color,\n            bg.alpha,\n          );\n\n          setRadar(newRadar);\n        } else onUpdateSVG();\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [radar, zoomKrpano, hlookatKrpano]);\n\n    useEffect(\n      () => () => {\n        setRadar(null);\n        svgRef.current = null;\n      },\n      [],\n    );\n\n    return <div ref={svgRef} />;\n  },\n);\n\nexport default Radar;\n"],"names":["Radar","memo","param","north","_param_north","borderWidth","borderColor","bgColor","width","svgRef","useRef","useState","radar","setRadar","hlookatKrpano","useHLookatKrpano","zoomKrpano","useZoomKrpano","onCreateSVG","useCallback","pixelWidth","ns","svg","document","createElementNS","setAttribute","style","position","left","concat","top","transform","zIndex","path","appendChild","drawer","setstyle","linecolor","linewidth","linealpha","fillcolor","fillalpha","drawpie","cx","cy","r","von","bis","t1","t2","d","Math","PI","drawmode","x1","sin","y1","cos","x2","y2","onUpdateSVG","radarrange","dom_size","ceil","hlookat","heading","hfov","current","useEffect","undefined","newRadar","bg","separateColorAndTransparency","border","color","alpha","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","div","ref","__webpack_exports__"],"sourceRoot":""}