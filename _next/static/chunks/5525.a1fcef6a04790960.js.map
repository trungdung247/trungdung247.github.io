{"version":3,"file":"static/chunks/5525.a1fcef6a04790960.js","mappings":"uPAWMA,EAAsBC,IAAQ,kBAAMC,EAAAC,CAAA,OAAAC,IAAA,CAAAF,EAAAG,IAAA,CAAAH,EAAA,kEACpCI,EAAgBL,IAAQ,kBAAMM,QAAAC,GAAA,EAAAN,EAAAC,CAAA,OAAAD,EAAAC,CAAA,OAAAD,EAAAC,CAAA,MAAAD,EAAAC,CAAA,OAAAD,EAAAC,CAAA,QAAAC,IAAA,CAAAF,EAAAG,IAAA,CAAAH,EAAA,kEAC9BO,EAAkBR,IAAQ,kBAAMM,QAAAC,GAAA,EAAAN,EAAAC,CAAA,OAAAD,EAAAC,CAAA,OAAAD,EAAAC,CAAA,MAAAD,EAAAC,CAAA,OAAAD,EAAAC,CAAA,QAAAC,IAAA,CAAAF,EAAAG,IAAA,CAAAH,EAAA,kEAChCQ,EAAmBT,IAAQ,kBAAMM,QAAAC,GAAA,EAAAN,EAAAC,CAAA,OAAAD,EAAAC,CAAA,OAAAD,EAAAC,CAAA,MAAAD,EAAAC,CAAA,OAAAD,EAAAC,CAAA,OAAAD,EAAAC,CAAA,SAAAC,IAAA,CAAAF,EAAAG,IAAA,CAAAH,EAAA,kEAM1BS,EAAaC,CAAAA,EAAAA,EAAAA,IAAAA,EAAK,SAAAC,CAAA,MAAGC,EAAAA,EAAAA,SAAAA,CAC1BC,EAAgBC,CAAAA,EAAAA,EAAAA,EAAAA,EAAYC,EAAAA,EAAmBA,EAC/CC,EAAgBF,CAAAA,EAAAA,EAAAA,EAAAA,EAAYG,EAAAA,EAAmBA,EAE9CC,EAAaC,CAAAA,EAAAA,EAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,EAAa,WAAbA,CAAAA,EAAAA,CAEpB,MACE,GAAAC,EAAAC,IAAA,EAACC,EAAAA,EAAiBA,CAAAA,CAChBC,GAAG,kBACHC,iBAAkBN,EAAUM,gBAAgB,WAE5C,GAAAJ,EAAAK,GAAA,EAAC3B,EAAAA,CAAAA,GAED,GAAAsB,EAAAC,IAAA,EAACK,MAAAA,CAAIC,UAAU,mBACb,GAAAP,EAAAK,GAAA,EAACG,KAAAA,CAAGD,UAAU,0BAAkBX,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAea,KAAK,GAAI,QACxD,GAAAT,EAAAK,GAAA,EAACK,IAAAA,UAAGjB,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAegB,KAAK,GAAI,WAG9B,GAAAT,EAAAK,GAAA,EAACrB,EAAAA,CAAcQ,UAAWA,IAE1B,GAAAQ,EAAAK,GAAA,EAACjB,EAAAA,CAAiBI,UAAWA,IAC7B,GAAAQ,EAAAK,GAAA,EAAClB,EAAAA,CAAgBK,UAAWA,MAGlC,EAEAmB,CAAAA,EAAA,QAAetB","sources":["webpack://_N_E/./containers/Home/themes/ThemeSolid/Controlbar.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import dynamic from 'next/dynamic';\nimport { memo } from 'react';\nimport { Type_RefFuncKrpano } from '@components/Krpano/types';\nimport { useSelector } from 'react-redux';\nimport {\n  selectDetailProject,\n  selectSceneSelected,\n} from '@containers/Home/selectors';\nimport { useTourStats } from '@containers/Home/global/TourStats';\nimport { ControlbarWrapper } from './styled';\n\nconst ControlbarCopyright = dynamic(() => import('./Controlbar.Copyright'));\nconst ControlbarTop = dynamic(() => import('./Controlbar.Top'));\nconst ControlbarRight = dynamic(() => import('./Controlbar.Right'));\nconst ControlbarCenter = dynamic(() => import('./Controlbar.Center'));\n\ninterface Props {\n  krpanoRef: Type_RefFuncKrpano | null;\n}\n\nexport const Controlbar = memo(({ krpanoRef }: Props) => {\n  const sceneSelected = useSelector(selectSceneSelected);\n  const detailProject = useSelector(selectDetailProject);\n\n  const [tourStats] = useTourStats('stats');\n\n  return (\n    <ControlbarWrapper\n      id=\"themeControlbar\"\n      isShowControlbar={tourStats.isShowControlbar}\n    >\n      <ControlbarCopyright />\n\n      <div className=\"txtBox\">\n        <h1 className=\"--projectTitle\">{detailProject?.title || 'N/A'}</h1>\n        <p>{sceneSelected?.title || 'N/A'}</p>\n      </div>\n\n      <ControlbarTop krpanoRef={krpanoRef} />\n\n      <ControlbarCenter krpanoRef={krpanoRef} />\n      <ControlbarRight krpanoRef={krpanoRef} />\n    </ControlbarWrapper>\n  );\n});\n\nexport default Controlbar;\n"],"names":["ControlbarCopyright","dynamic","__webpack_require__","e","then","bind","ControlbarTop","Promise","all","ControlbarRight","ControlbarCenter","Controlbar","memo","param","krpanoRef","sceneSelected","useSelector","selectSceneSelected","detailProject","selectDetailProject","tourStats","useTourStats","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","ControlbarWrapper","id","isShowControlbar","jsx","div","className","h1","title","p","__webpack_exports__"],"sourceRoot":""}