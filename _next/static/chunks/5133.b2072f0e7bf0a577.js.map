{"version":3,"file":"static/chunks/5133.b2072f0e7bf0a577.js","mappings":"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","sources":["webpack://_N_E/./containers/Home/components/Map/DisplayPanel.tsx","webpack://_N_E/./containers/Home/components/Map/GoogleMap.tsx","webpack://_N_E/./containers/Home/hook/useEventMap.tsx","webpack://_N_E/<anon>"],"sourcesContent":["/* eslint-disable no-nested-ternary */\nimport { memo, useRef, useCallback } from 'react';\nimport { I_Scene } from '@containers/Home/types';\nimport { DEFAULT_VALUE_MAP_CONFIG } from '@containers/Home/constants';\nimport dynamic from 'next/dynamic';\nimport { useTourEventState } from '@containers/Home/global/TourStats';\nimport { useEventMap } from '@containers/Home/hook/useEventMap';\nimport { useSelector } from 'react-redux';\nimport {\n  selectLanguageProject,\n  selectThemeConfigGlobal,\n} from '@containers/Home/selectors';\nimport { Tooltip } from 'antd';\nimport { ActionMapWrapper, MapPanelWrapper } from './styled';\nimport GoogleMap, { Type_RefFuncGoogleMap } from './GoogleMap';\nimport { isServer } from '@utils/helper';\n\nconst Popup = dynamic(() => import('./Popup'));\n\ninterface Props {\n  onChangeScene: (scene: I_Scene) => void;\n}\n\nconst MapPanel = memo(({ onChangeScene }: Props) => {\n  const LANGUAGES = isServer ? {} : window.languages || {};\n\n  const googleMapRef = useRef<Type_RefFuncGoogleMap>(null!);\n  const languageProject = useSelector(selectLanguageProject);\n  const themeConfig = useSelector(selectThemeConfigGlobal);\n  const [tourEventStats] = useTourEventState('state');\n\n  const {\n    mapData,\n    configMap,\n    visiblePopup,\n    sceneSelected,\n    markerSelected,\n    configDisplayPanel,\n    onCloseMap,\n    onOpenPopup,\n    onClosePopup,\n  } = useEventMap();\n\n  const onCoverAllMarker = useCallback(() => {\n    googleMapRef.current?.onFitBounds();\n  }, []);\n\n  const onCenterToMarkerActive = useCallback(() => {\n    googleMapRef.current?.onPanToMarker(markerSelected);\n  }, [markerSelected]);\n\n  return (\n    <MapPanelWrapper\n      bgColor={configMap?.bgColor || DEFAULT_VALUE_MAP_CONFIG.bgColor || '#000'}\n      position={configDisplayPanel?.position || 'left'}\n      className={`${tourEventStats.isVisibleMap ? '' : 'hide'} ${\n        themeConfig?.selected === 'basekrpano'\n          ? 'basekrpano'\n          : themeConfig?.selected === 'custom1'\n          ? 'custom1'\n          : themeConfig?.selected === 'wall'\n          ? 'wall'\n          : 'default'\n      }`}\n    >\n      <div className=\"main\">\n        <GoogleMap\n          ref={googleMapRef}\n          mapData={mapData}\n          sceneSelected={sceneSelected}\n          markerSelected={markerSelected}\n          configMap={configMap}\n          onChangeScene={onChangeScene}\n        />\n      </div>\n\n      <ActionMapWrapper>\n        <div className=\"--left\" />\n        <div className=\"--right\">\n          <Tooltip\n            title={LANGUAGES[languageProject]?.actionMarkerCenter}\n            placement=\"top\"\n          >\n            <div className=\"action--item\" onClick={onCenterToMarkerActive}>\n              <i aria-hidden className=\"far fa-crosshairs\" />\n            </div>\n          </Tooltip>\n          <Tooltip\n            title={LANGUAGES[languageProject]?.actionMarkerCover}\n            placement=\"top\"\n          >\n            <div className=\"action--item\" onClick={onCoverAllMarker}>\n              <i aria-hidden className=\"far fa-ball-pile\" />\n            </div>\n          </Tooltip>\n          <Tooltip\n            title={LANGUAGES[languageProject]?.actionMarkerExpand}\n            placement=\"top\"\n          >\n            <div className=\"action--item\" onClick={onOpenPopup}>\n              <i aria-hidden className=\"far fa-expand\" />\n            </div>\n          </Tooltip>\n          <Tooltip\n            title={LANGUAGES[languageProject]?.actionMarkerClose}\n            placement=\"top\"\n          >\n            <div className=\"action--item\" onClick={onCloseMap}>\n              <i aria-hidden className=\"far fa-times\" />\n            </div>\n          </Tooltip>\n        </div>\n      </ActionMapWrapper>\n\n      {visiblePopup && (\n        <Popup\n          visible={visiblePopup}\n          markerSelected={markerSelected}\n          mapData={mapData}\n          configMap={configMap}\n          onChangeScene={onChangeScene}\n          onCancel={onClosePopup}\n        />\n      )}\n    </MapPanelWrapper>\n  );\n});\n\nexport default MapPanel;\n","import {\n  forwardRef,\n  memo,\n  Ref,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport dynamic from 'next/dynamic';\nimport { DEFAULT_VALUE_MAP_CONFIG } from '@containers/Home/constants';\nimport GoogleMapReact from 'google-map-react-concurrent';\nimport { selectListScene } from '../../selectors';\nimport { GoogleMapWrapper } from './styled';\nimport { I_MapConfig, I_Map, I_Scene } from '../../types';\n\nconst Marker = dynamic(() => import('./Marker'));\n\nexport type Type_RefFuncGoogleMap = {\n  onFitBounds: () => void;\n  onPanToMarker: (marker: I_Map['markers'][number]) => void;\n};\n\ninterface Props {\n  mapData?: I_Map;\n  sceneSelected?: I_Scene;\n  configMap?: I_MapConfig;\n  markerSelected?: I_Map['markers'][number];\n  onChangeScene: (scene: I_Scene) => void;\n}\n\nconst Map = forwardRef(\n  (\n    { configMap, sceneSelected, mapData, markerSelected, onChangeScene }: Props,\n    ref: Ref<Type_RefFuncGoogleMap>,\n  ) => {\n    const mapRef = useRef<any>(null!);\n    const [isMapLoaded, setIsMapLoaded] = useState(false);\n\n    const listScene = useSelector(selectListScene);\n\n    const configRadar = useMemo(\n      () => ({\n        ...DEFAULT_VALUE_MAP_CONFIG.radar,\n        ...configMap?.radar,\n      }),\n      [configMap?.radar],\n    );\n    const configMarker = useMemo(\n      () => ({\n        ...DEFAULT_VALUE_MAP_CONFIG.marker,\n        ...configMap?.marker,\n      }),\n      [configMap?.marker],\n    );\n\n    const customMapStyles = useMemo(() => {\n      try {\n        return configMap?.mapStyle\n          ? JSON.parse(configMap?.mapStyle || '[]')\n          : [];\n      } catch {\n        return [];\n      }\n    }, [configMap]);\n\n    const onFitBounds = useCallback(() => {\n      const _window = window as any;\n      if (_window.google) {\n        const bounds = new _window.google.maps.LatLngBounds();\n        mapData?.markers?.forEach(marker => {\n          bounds.extend({ lat: marker.lat, lng: marker.lng });\n        });\n        mapRef.current.fitBounds(bounds);\n      }\n    }, [mapData]);\n\n    const onPanToMarker = useCallback((marker: typeof markerSelected) => {\n      mapRef.current?.panTo({\n        lat: marker?.lat,\n        lng: marker?.lng,\n      });\n      mapRef.current?.setZoom(18);\n    }, []);\n\n    const onClickMarker = useCallback(\n      (_key, childProps) => {\n        if (childProps?.marker?.target_scene_id) {\n          const scene = listScene.filter(\n            item => item.id === childProps?.marker?.target_scene_id,\n          )[0];\n          if (scene) onChangeScene(scene);\n        }\n      },\n      [listScene, onChangeScene],\n    );\n\n    useEffect(() => {\n      /**\n       * NOTE: default view OR fit bounds\n       */\n      if (isMapLoaded) {\n        if (markerSelected) onPanToMarker(markerSelected);\n        else onFitBounds();\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isMapLoaded, markerSelected]);\n\n    useImperativeHandle(ref, () => ({\n      onFitBounds: () => onFitBounds(),\n      onPanToMarker: (marker: typeof markerSelected) => onPanToMarker(marker),\n    }));\n\n    return (\n      <GoogleMapWrapper>\n        <GoogleMapReact\n          bootstrapURLKeys={{\n            key:\n              process.env.NEXT_PUBLIC_GOOGLE_KEY ||\n              'AIzaSyAcwcJSrJ4_PqEIJoQCtC5RP988Eka0YE8',\n          }}\n          draggable\n          defaultCenter={{\n            lat: 0,\n            lng: 0,\n          }}\n          defaultZoom={12}\n          options={() => ({\n            minZoom: 2,\n            panControl: false,\n            mapTypeControl: false,\n            scrollwheel: true,\n            streetViewControl: false,\n            mapTypeId: configMap?.mapType,\n            disableDefaultUI: true,\n            styles: customMapStyles,\n          })}\n          scrollWheelZoom=\"center\"\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={({ map }) => {\n            mapRef.current = map;\n            setIsMapLoaded(true);\n          }}\n          onChildClick={onClickMarker}\n        >\n          {mapData?.markers.map(item => (\n            <Marker\n              key={item.id}\n              lat={item.lat}\n              lng={item.lng}\n              marker={item}\n              configRadar={configRadar}\n              configMarker={configMarker}\n              northRadar={sceneSelected?.north_ath || 0}\n              isTurnOnRadar={!!configRadar.isEnabled}\n              isActive={markerSelected?.id === item.id}\n            />\n          ))}\n        </GoogleMapReact>\n      </GoogleMapWrapper>\n    );\n  },\n);\n\nexport default memo(Map);\n","import { useCallback, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useTourEventState } from '../global/TourStats';\nimport {\n  selectDataMap,\n  selectConfigMap,\n  selectSceneSelected,\n} from '../selectors';\n\n// interface Props {}\n\nexport const useEventMap = () => {\n  const mapData = useSelector(selectDataMap);\n  const configMap = useSelector(selectConfigMap);\n  const sceneSelected = useSelector(selectSceneSelected);\n\n  const [, setTourEventStats] = useTourEventState('state');\n\n  const markerSelected = useMemo(\n    () =>\n      mapData?.markers?.filter(\n        item => item.target_scene_id === sceneSelected?.id,\n      )[0] || undefined,\n    [mapData, sceneSelected?.id],\n  );\n\n  const configDisplayPanel = useMemo(\n    () => (configMap?.map?.type === 'panel' ? configMap?.map : undefined),\n    [configMap?.map],\n  );\n\n  const configDisplayBox = useMemo(\n    () =>\n      configMap?.map?.type === 'box'\n        ? {\n            ...{\n              offsetBottom: 48,\n              offsetLeft: 10,\n              offsetRight: 10,\n              offsetTop: 10,\n            },\n            ...configMap?.map,\n          }\n        : undefined,\n    [configMap?.map],\n  );\n\n  const [visiblePopup, setVisiblePopup] = useState(false);\n\n  const onCloseMap = useCallback(() => {\n    setTourEventStats(prev => ({ ...prev, isVisibleMap: false }));\n  }, [setTourEventStats]);\n\n  const onOpenPopup = useCallback(() => setVisiblePopup(true), []);\n  const onClosePopup = useCallback(() => setVisiblePopup(false), []);\n\n  return useMemo(\n    () => ({\n      visiblePopup,\n      sceneSelected,\n      markerSelected,\n      configMap,\n      configDisplayBox,\n      mapData,\n      configDisplayPanel,\n      onCloseMap,\n      onClosePopup,\n      onOpenPopup,\n    }),\n    [\n      visiblePopup,\n      sceneSelected,\n      markerSelected,\n      configMap,\n      configDisplayBox,\n      mapData,\n      configDisplayPanel,\n      onCloseMap,\n      onClosePopup,\n      onOpenPopup,\n    ],\n  );\n};\n"],"names":["Popup","dynamic","__webpack_require__","e","then","bind","MapPanel","memo","param","LANGUAGES","onChangeScene","isServer","window","languages","googleMapRef","useRef","languageProject","useSelector","selectLanguageProject","themeConfig","selectThemeConfigGlobal","tourEventStats","useTourEventState","useEventMap","mapData","configMap","visiblePopup","sceneSelected","markerSelected","configDisplayPanel","onCloseMap","onOpenPopup","onClosePopup","onCoverAllMarker","useCallback","current","onFitBounds","onCenterToMarkerActive","onPanToMarker","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","MapPanelWrapper","bgColor","DEFAULT_VALUE_MAP_CONFIG","position","className","isVisibleMap","concat","selected","jsx","div","GoogleMap","ref","ActionMapWrapper","Tooltip","title","actionMarkerCenter","placement","onClick","i","aria-hidden","actionMarkerCover","actionMarkerExpand","actionMarkerClose","visible","onCancel","__webpack_exports__","Marker","Map","forwardRef","mapRef","useState","isMapLoaded","setIsMapLoaded","listScene","selectListScene","configRadar","useMemo","_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_9__","_","radar","configMarker","marker","customMapStyles","mapStyle","JSON","parse","_window","google","bounds","maps","LatLngBounds","markers","forEach","extend","lat","lng","fitBounds","panTo","setZoom","onClickMarker","_key","childProps","target_scene_id","scene","filter","item","id","useEffect","useImperativeHandle","GoogleMapWrapper","GoogleMapReact","bootstrapURLKeys","key","process","env","NEXT_PUBLIC_GOOGLE_KEY","draggable","defaultCenter","defaultZoom","options","minZoom","panControl","mapTypeControl","scrollwheel","streetViewControl","mapTypeId","mapType","disableDefaultUI","styles","scrollWheelZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","map","onChildClick","northRadar","north_ath","isTurnOnRadar","isEnabled","isActive","Z","selectDataMap","selectConfigMap","selectSceneSelected","setTourEventStats","undefined","type","configDisplayBox","_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_5__","offsetBottom","offsetLeft","offsetRight","offsetTop","setVisiblePopup","prev","_swc_helpers_object_spread_props__WEBPACK_IMPORTED_MODULE_6__"],"sourceRoot":""}