{"version":3,"file":"static/chunks/7011.ff6d6c3f05081560.js","mappings":"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","sources":["webpack://_N_E/./components/CallToActions/styled.ts","webpack://_N_E/./containers/Home/hook/useControlbarConfig.tsx","webpack://_N_E/./containers/Home/themes/ThemeCompact/styled.ts","webpack://_N_E/./containers/Home/themes/ThemeSolid/Controlbar.Center.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CallToActionItemWrapper = styled.div<{\n  scale: number;\n}>`\n  color: inherit !important;\n  width: calc(42px * ${props => props.scale});\n  height: calc(42px * ${props => props.scale});\n  max-width: 120px;\n  max-height: 120px;\n  display: flex;\n  align-items: center;\n  padding: 0.75rem 0.5rem;\n  cursor: pointer;\n  transition: var(--transition-regular);\n  border-radius: 8px;\n  .--symbol {\n    font-size: 1.25rem;\n    margin-right: 0.5rem;\n    object-fit: contain;\n    display: inline-flex;\n    justify-content: center;\n  }\n  .--arrow {\n    position: absolute;\n    right: 1rem;\n    transform: translateX(1rem);\n    opacity: 0;\n    transition: var(--transition-smooth);\n  }\n  span {\n    max-width: 160px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    left: 100%;\n    transform: translateX(calc(42px * ${props => props.scale})) scale(0.9);\n  }\n  .--symbol {\n    width: 80%;\n  }\n  i {\n    font-size: calc(14px * ${props => props.scale}) !important;\n  }\n  @media (hover: hover) and (pointer: fine) {\n    &:hover {\n      background: rgba(0, 0, 0, 0.35);\n      .--arrow {\n        opacity: 1;\n        transform: none;\n      }\n    }\n  }\n`;\n\nexport const CallToActionsWrapper = styled.div<{\n  offsetLeft: string | number;\n  offsetRight: string | number;\n  offsetBottom: string | number;\n}>`\n  position: absolute;\n  bottom: ${props => props.offsetBottom || 165}px;\n  &.--left {\n    left: ${props => props.offsetLeft || 12}px;\n    .--panel {\n      left: 0;\n    }\n    &.--layoutList {\n      .--panel {\n        left: ${props => props.offsetLeft || 12}px;\n      }\n    }\n    &.bubble {\n      .itemLink {\n        width: 100%;\n        height: auto;\n        padding-right: 18px;\n        span {\n          transform: none;\n        }\n        i {\n          font-size: 1.25rem !important;\n        }\n      }\n    }\n  }\n  &.--right {\n    right: ${props => props.offsetRight || 12}px;\n    .--panel {\n      right: 0;\n      transform-origin: bottom right;\n    }\n    &.--layoutList {\n      .--panel {\n        right: ${props => props.offsetRight || 12}px;\n        ${CallToActionItemWrapper} {\n          span {\n            right: 0;\n            transform: translateX(-42px) scale(0.9);\n          }\n        }\n      }\n    }\n  }\n  z-index: 1;\n  .--toggler {\n    width: 3.5rem;\n    height: 3.5rem;\n    font-size: 1.25rem;\n    border-radius: 50%;\n    background: var(--color-primary);\n    backdrop-filter: blur(10px);\n    color: var(--color-text);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    i:nth-child(1) {\n      display: block;\n    }\n    i:nth-child(2) {\n      display: none;\n    }\n  }\n  .--panel {\n    position: absolute;\n    bottom: 4.5rem;\n    background: var(--color-primary);\n    backdrop-filter: blur(10px);\n    color: var(--color-text);\n    width: max-content;\n    display: flex;\n    flex-flow: column;\n    border-radius: 12px;\n    padding: 0.5rem;\n    min-width: 160px;\n    transition: all 0.35s cubic-bezier(0.45, 1.83, 0.6, 0.97);\n    opacity: 0;\n    transform: scale(0.5);\n    pointer-events: none;\n    transform-origin: bottom left;\n  }\n\n  &.active {\n    .--toggler {\n      i:nth-child(1) {\n        display: none;\n      }\n      i:nth-child(2) {\n        display: block;\n      }\n    }\n    .--panel {\n      transform: none;\n      opacity: 1;\n      pointer-events: auto;\n    }\n  }\n  &.--layoutList {\n    .itemLink {\n      span {\n        position: relative;\n        transform: none;\n        left: 100%;\n      }\n    }\n    .--toggler {\n      display: none;\n    }\n    .--panel {\n      display: flex;\n      flex-flow: column;\n      align-items: center;\n      opacity: 1;\n      transform: none;\n      pointer-events: auto;\n      border-radius: 0;\n      background-color: transparent;\n      backdrop-filter: initial;\n      min-width: initial;\n      top: 0;\n      bottom: 0;\n      margin: auto;\n      position: absolute;\n      height: max-content;\n    }\n    ${CallToActionItemWrapper} {\n      background: var(--color-primary);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      border-radius: 50%;\n      transition: var(--transition-smooth);\n      margin: 0.5rem 0;\n      span {\n        position: absolute;\n        padding: 4px 8px;\n        border-radius: 4px;\n        opacity: 0;\n        font-weight: 600;\n        pointer-events: none;\n        transition: var(--transition-regular);\n        text-shadow: 0 1px 6px rgb(0 0 0 / 35%);\n      }\n      .--symbol {\n        margin: 0;\n        font-size: 1rem;\n        height: auto;\n        object-fit: contain;\n      }\n      .--arrow {\n        display: none;\n      }\n      @media (hover: hover) and (pointer: fine) {\n        &:hover {\n          background: var(--color-primary);\n          transform: scale(1.1);\n          span {\n            opacity: 1;\n          }\n        }\n      }\n    }\n  }\n`;\n","import { useCallback, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectConfigControlbar, selectSceneSelected } from '../selectors';\nimport { I_ControlbarKey } from '../types';\nimport { useTourStats } from '../global/TourStats';\nimport { DEFAULT_VALUE_CONTROLBAR_CONFIG } from '../constants';\n\nexport const useControlbarConfig = () => {\n  const [tourStats] = useTourStats('stats');\n  const sceneSelected = useSelector(selectSceneSelected);\n  const controlbarConfig = useSelector(selectConfigControlbar);\n\n  const onCheckIsShowContentControlbarItem = useCallback(\n    (type: I_ControlbarKey) => {\n      if (type) {\n        const config =\n          controlbarConfig[type] || DEFAULT_VALUE_CONTROLBAR_CONFIG[type];\n\n        return type === 'gyro'\n          ? !!tourStats.isGyroscopeAvailable && !config?.isHide\n          : type === 'vr' || type === 'view_mode'\n          ? !config?.isHide && sceneSelected?.media?.subType !== 'flat'\n          : !config?.isHide;\n      }\n      return true;\n    },\n    [sceneSelected?.media, controlbarConfig, tourStats],\n  );\n\n  const onRenderContentControlbarItem = useCallback(\n    (type: I_ControlbarKey) => {\n      if (type) {\n        const config =\n          controlbarConfig[type] || DEFAULT_VALUE_CONTROLBAR_CONFIG[type];\n        if (config.type === 'icon' && config.icon)\n          return (\n            <i aria-hidden className={`controlbar-item__icon ${config.icon}`} />\n          );\n        if (config.type === 'image' && config.image?.src)\n          return (\n            <img\n              className=\"controlbar-item__img\"\n              src={config.image?.src}\n              alt=\"img\"\n            />\n          );\n      }\n      return '';\n    },\n    [controlbarConfig],\n  );\n\n  return useMemo(\n    () => ({\n      onRenderContentControlbarItem,\n      onCheckIsShowContentControlbarItem,\n    }),\n    [onRenderContentControlbarItem, onCheckIsShowContentControlbarItem],\n  );\n};\n","import styled from 'styled-components';\nimport { CallToActionsWrapper } from '@components/CallToActions/styled';\n\nexport const ListSceneWrapper = styled.div`\n  position: absolute;\n  z-index: 21;\n  top: 0;\n  left: 0;\n  width: 220px;\n  height: 100vh;\n  background: rgba(0, 0, 0, 0.6);\n  transition: var(--transition-smooth);\n  // backdrop-filter: blur(10px);\n  .--toggler {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 25px;\n    transition: var(--transition-regular);\n    cursor: pointer;\n    color: #fff;\n    position: absolute;\n    top: 1rem;\n    font-size: 1.25rem;\n    text-shadow: 0 0 12px rgba(0, 0, 0, 0.25);\n    width: 2.5rem;\n    height: 2.5rem;\n    right: -3rem;\n    background: var(--color-primary);\n    border: 1px solid transparent;\n    &:hover {\n      background-color: var(--color-primary);\n      box-shadow: 0 0 16px rgba(0, 0, 0, 0.5);\n    }\n    .state-close {\n      display: block;\n    }\n    .state-open {\n      display: none;\n    }\n  }\n  .--logo {\n    width: 100%;\n    margin: 0 auto;\n    flex: 0 0 auto;\n    text-align: center;\n    img {\n      width: auto;\n      max-width: 100%;\n      height: auto;\n    }\n  }\n  .--mainPanel {\n    color: var(--color-text);\n    display: flex;\n    flex-flow: column;\n    height: 100%;\n  }\n  .--sceneMenuWrapper {\n    width: 100%;\n    overflow: auto;\n    height: 100%;\n    &.active {\n      // height: max-content;\n      // max-height: 100%;\n      overflow: hidden;\n      /* flex: 1; */\n      /* height: unset; */\n    }\n  }\n  .--customLink {\n    // background-color: purple;\n    // flex: 0 0 auto;\n    overflow: auto;\n    flex: 1;\n  }\n  &.inactive {\n    transform: translate(-100%);\n    .--toggler {\n      background-color: rgba(0, 0, 0, 0.2);\n      border-color: rgba(255, 255, 255, 0.5);\n      .state-open {\n        display: block;\n      }\n      .state-close {\n        display: none;\n      }\n    }\n  }\n  &.sceneCate--on {\n    .--customLink {\n      display: none;\n    }\n  }\n\n  .sceneMenu {\n    display: flex;\n    height: max-content;\n    max-height: 100%;\n    width: 200%;\n    transition: var(--transition-smooth);\n    .--cateList {\n      display: flex;\n      flex-flow: column;\n      width: 50%;\n      flex: 0 0 auto;\n      overflow-y: auto;\n    }\n    .--listing {\n    }\n    &.active {\n      transform: translateX(-50%);\n      .sceneList {\n        height: auto;\n      }\n    }\n  }\n\n  .itemSceneCate {\n    padding: 1.25rem 1rem;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n    cursor: pointer;\n    transition: var(--transition-regular);\n    text-align: center;\n    transition: var(--transition-regular);\n    cursor: pointer;\n    position: relative;\n    &:hover {\n      // border-color: rgba(255, 255, 255, 0.5);\n      // padding: 1.5rem 1rem;\n      background: rgba(255, 255, 255, 0.15);\n    }\n  }\n\n  .itemSceneCate {\n    padding: 0.75rem 1rem 0.5rem;\n    display: flex;\n    flex-flow: column;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n    min-height: 80px;\n    .--cateImg {\n      position: relative;\n      z-index: 1;\n      width: 80%;\n      margin: 0 auto;\n      img {\n        border: 1px solid rgba(255, 255, 255, 0.8);\n        // border-radius: 6px;\n        z-index: 1;\n        position: relative;\n        width: 100%;\n      }\n      &:before,\n      &:after {\n        content: '';\n        position: absolute;\n        // border-radius: 0 0 4px 4px;\n        z-index: -1;\n        left: 50%;\n        transform: translateX(-50%);\n        border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n        border-left: 1px solid rgba(255, 255, 255, 0.2);\n        border-right: 1px solid rgba(255, 255, 255, 0.2);\n        background: rgba(255, 255, 255, 0.2);\n      }\n      &:before {\n        width: 60%;\n        height: 4px;\n        bottom: -10px;\n      }\n      &:after {\n        width: 80%;\n        height: 6px;\n        bottom: -6px;\n      }\n    }\n    .--cateTitle {\n      font-weight: 300;\n      font-size: 0.8rem;\n      display: block;\n      text-transform: uppercase;\n      letter-spacing: 2px;\n      // margin-top: 0.5rem;\n      transition: var(--transition-smooth);\n      padding: 0 12px;\n      width: 100%;\n      word-wrap: break-word;\n    }\n    &:hover {\n      .--cateTitle {\n        letter-spacing: 4px;\n      }\n    }\n    &.active {\n      background: var(--color-primary);\n      color: #fff;\n    }\n  }\n\n  .sceneList {\n    display: flex;\n    flex-flow: column;\n    // background-color: var(--color-primary);\n    padding: 0;\n    width: 50%;\n    height: 0;\n    flex: 1;\n    .--back {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      flex: 0 0 auto;\n      gap: 8px;\n      padding: 0.5rem;\n      font-size: 0.7rem;\n      text-transform: uppercase;\n      letter-spacing: 3px;\n      cursor: pointer;\n      transition: var(--transition-smooth);\n      &:hover {\n        letter-spacing: 5px;\n      }\n    }\n    .--listing {\n      overflow: auto;\n    }\n  }\n\n  .itemScene,\n  .itemMenuLink {\n    width: 100%;\n    height: 100px;\n    overflow: hidden;\n    position: relative;\n    transition: var(--transition-regular);\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n    background: #000;\n    z-index: 0;\n    img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n      position: absolute;\n      top: 0;\n      left: 0;\n      transition: var(--transition-smooth);\n      opacity: 0.6;\n      z-index: -1;\n      transform: scale(1.1);\n    }\n    span {\n      font-size: 0.7rem;\n      text-shadow: 0 0 8px #000;\n      letter-spacing: 1px;\n      text-transform: uppercase;\n      padding: 0 12px;\n      width: 100%;\n      word-wrap: break-word;\n    }\n    &:hover {\n      img {\n        transform: scale(1.3);\n        opacity: 0.8;\n      }\n    }\n    &.active {\n    }\n  }\n\n  // .itemMenuLink {\n  //   span {\n  //   }\n  //   &.type-scene {\n  //     overflow: hidden;\n  //     background-color: #000;\n  //     z-index: 1;\n  //     img {\n  //       width: 100%;\n  //       height: 100%;\n  //       object-fit: cover;\n  //       position: absolute;\n  //       top: 0;\n  //       left: 0;\n  //       transition: var(--transition-smooth);\n  //       opacity: 0.2;\n  //       z-index: -1;\n  //     }\n  //     &:hover {\n  //       img {\n  //         transform: scale(1.2);\n  //         opacity: 0.4;\n  //       }\n  //     }\n  //   }\n  // }\n`;\n\nexport const ControlbarWrapper = styled.div`\n  position: absolute;\n  z-index: 23;\n  right: 1rem;\n  top: 1rem;\n  display: flex;\n  flex-flow: column;\n  gap: 4px;\n  .--toggler,\n  .controlBar .--item {\n    width: 2.5rem;\n    height: 2.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 1rem;\n    border-radius: 25px;\n    margin: 2px 0;\n    transition: var(--transition-smooth);\n    flex: 0 0 auto;\n    cursor: pointer;\n    opacity: 1;\n    transform: none;\n    &:hover {\n      // transform: scale(1.1);\n      // transition-delay: 0s !important;\n      box-shadow: 0 0 16px rgba(0, 0, 0, 0.5);\n    }\n  }\n  .--toggler {\n    background-color: var(--color-primary);\n    color: var(--color-text);\n  }\n  &.inactive {\n    .controlBar .--item {\n      opacity: 0;\n      transform: translateX(2rem);\n    }\n  }\n  @media (max-width: 640px) {\n  }\n\n  .controlBar {\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n    gap: 4px;\n    transition: var(--transition-smooth);\n    .--item {\n      background: rgba(0, 0, 0, 0.2);\n      border: 1px solid rgba(255, 255, 255, 0.5);\n      color: #fff;\n      &:nth-child(1) {\n        transition-delay: 0s;\n      }\n      &:nth-child(2) {\n        transition-delay: 0.05s;\n      }\n      &:nth-child(3) {\n        transition-delay: 0.1s;\n      }\n      &:nth-child(4) {\n        transition-delay: 0.15s;\n      }\n      &:nth-child(5) {\n        transition-delay: 0.2s;\n      }\n      &:nth-child(6) {\n        transition-delay: 0.25s;\n      }\n      &:nth-child(7) {\n        transition-delay: 0.3s;\n      }\n      &:nth-child(8) {\n        transition-delay: 0.35s;\n      }\n      &:nth-child(9) {\n        transition-delay: 0.4s;\n      }\n      &:nth-child(10) {\n        transition-delay: 0.45s;\n      }\n    }\n  }\n`;\n\nexport const HeaderWrapper = styled.div`\n  position: absolute;\n  z-index: 21;\n  margin: 0 auto;\n  width: max-content;\n  left: 0;\n  right: 0;\n  .--content {\n    display: flex;\n    flex-flow: column;\n    color: #fff;\n    font-weight: 300;\n    text-shadow: 0 0px 6px rgba(0, 0, 0, 0.4);\n    margin-bottom: 0.5rem;\n    text-align: center;\n    padding: 0.5rem 0;\n    text-transform: uppercase;\n    pointer-events: none;\n  }\n  .--projectName {\n    font-size: 1.1rem;\n    display: block;\n    margin-bottom: -2px;\n    pointer-events: none;\n  }\n  .--sceneName {\n    font-size: 0.8rem;\n  }\n`;\n\nexport const ThemeCompactWrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  position: relative;\n  overflow: hidden;\n  background: #ffffff;\n  button {\n    cursor: pointer;\n  }\n  & ~ ${CallToActionsWrapper} {\n    .--toggler {\n      width: 2.5rem;\n      height: 2.5rem;\n      transition: var(--transition-regular);\n      &:hover {\n        box-shadow: 0 0 16px rgba(0, 0, 0, 0.5);\n      }\n    }\n    .--panel {\n      bottom: 3rem;\n      background: rgba(0, 0, 0, 0.3);\n      backdrop-filter: none;\n    }\n    &.--layoutList .--panel {\n      background: transparent;\n      padding: 0;\n      bottom: 0;\n    }\n  }\n`;\n\nexport const ControlbarPopoverWrapper = styled.div`\n  z-index: 100;\n  ul {\n    padding: 0;\n    margin: 0;\n    li {\n      list-style: none;\n      button {\n        cursor: pointer;\n        background: #212121;\n        border-color: transparent;\n        color: rgb(255 255 255 / 0.5);\n        width: 100%;\n        justify-content: left;\n        height: auto;\n        display: flex;\n        align-items: center;\n        transition: all 0.15s ease-out;\n        @media (hover: hover) and (pointer: fine) {\n          &:hover {\n            color: #fff;\n          }\n        }\n        img,\n        i {\n          width: 2rem;\n          height: 2rem;\n          color: #fff;\n          margin-right: 0.5rem;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-size: 1rem;\n          border-radius: 50%;\n          background: #393839;\n          text-shadow: none;\n          transition: all 0.15s ease-out;\n        }\n        img {\n          padding: 0.1rem;\n        }\n        @media (hover: hover) and (pointer: fine) {\n          &:hover {\n            i,\n            img {\n              background-color: #fff;\n              color: #212121;\n              transform: scale(0.8);\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const CopyrightWrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  padding: 0.5rem 0;\n  background: var(--color-primary);\n  color: var(--color-text);\n  * {\n    color: #fff;\n  }\n  > span {\n    font-size: 0.6rem;\n    margin-bottom: 0px;\n    display: block;\n    opacity: 0.75;\n  }\n  a {\n    font-weight: 500;\n    font-size: 0.7rem;\n    span {\n      font-size: inherit;\n    }\n  }\n`;\n","import { Type_RefFuncKrpano } from '@components/Krpano/types';\nimport { useTourEventState } from '@containers/Home/global/TourStats';\nimport { useControlbarConfig } from '@containers/Home/hook/useControlbarConfig';\nimport { useKrpano } from '@containers/Home/hook/useKrpano';\nimport { selectLanguageProject } from '@containers/Home/selectors';\nimport { Popover, Tooltip } from 'antd';\nimport React, { memo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ControlbarPopoverWrapper } from '../ThemeCompact/styled';\nimport { isServer } from '@utils/helper';\n\ninterface Props {\n  krpanoRef: Type_RefFuncKrpano | null;\n}\n\nconst ControlbarCenter = memo(({ krpanoRef }: Props) => {\n  const LANGUAGES = isServer ? {} : window.languages || {};\n\n  const [\n    { isSoundOnScene, visibleDialogPostScene, isActiveModeMultipleStaging },\n  ] = useTourEventState('state');\n  const { onCheckIsShowContentControlbarItem, onRenderContentControlbarItem } =\n    useControlbarConfig();\n  const languageProject = useSelector(selectLanguageProject);\n\n  const {\n    //\n    onVR,\n    onToFirstScene,\n    // NOTE: auto change scene\n    isChangeScene,\n    isShowIconChangeScene,\n    onChangeAutoChangeScene,\n    // NOTE: auto rotate\n    isRotate,\n    isShowIconRotate,\n    onToggleRotate,\n    // NOTE: info place\n    isShowIconInfoPlace,\n    onShowInfoPlace,\n    // NOTE: info scene\n    isShowIconInfoScene,\n    onToggleInfoScene,\n    // NOTE: sound scene\n    isShowIconSoundScene,\n    onToggleSoundScene,\n    // NOTE: multiple staging\n    isShowIconMultipleStaging,\n    onToggleModeMultipleStaging,\n    // NOTE: multi-language\n    languagesProject,\n    onChangeLanguageProject,\n  } = useKrpano({ krpanoRef });\n\n  return (\n    <div className=\"nav\">\n      {onCheckIsShowContentControlbarItem('home') && (\n        <Tooltip\n          title={LANGUAGES[languageProject]?.controlbarFirstScene}\n          placement=\"top\"\n        >\n          <button type=\"button\" className=\"act\" onClick={onToFirstScene}>\n            {onRenderContentControlbarItem('home')}\n          </button>\n        </Tooltip>\n      )}\n\n      {isShowIconInfoPlace &&\n        onCheckIsShowContentControlbarItem('info_tour') && (\n          <Tooltip\n            title={LANGUAGES[languageProject]?.controlbarInfoTour}\n            placement=\"top\"\n          >\n            <button type=\"button\" className=\"act\" onClick={onShowInfoPlace}>\n              {onRenderContentControlbarItem('info_tour')}\n            </button>\n          </Tooltip>\n        )}\n\n      {isShowIconInfoScene &&\n        onCheckIsShowContentControlbarItem('info_scene') && (\n          <Tooltip\n            title={LANGUAGES[languageProject]?.controlbarInfoScene}\n            placement=\"top\"\n          >\n            <button\n              type=\"button\"\n              className={`act ${visibleDialogPostScene ? 'active' : ''}`}\n              onClick={onToggleInfoScene.bind(this, undefined)}\n            >\n              {onRenderContentControlbarItem('info_scene')}\n            </button>\n          </Tooltip>\n        )}\n\n      {onCheckIsShowContentControlbarItem('multi_language') &&\n        languagesProject?.length > 1 && (\n          <Popover\n            placement=\"top\"\n            zIndex={99}\n            content={\n              <ControlbarPopoverWrapper>\n                <ul>\n                  {languagesProject.map(item => (\n                    <li key={item.id}>\n                      <button\n                        type=\"button\"\n                        onClick={() => onChangeLanguageProject(item.id)}\n                      >\n                        <img src={item.flag?.src} />\n                        {item.name}\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              </ControlbarPopoverWrapper>\n            }\n            overlayClassName=\"popoverControlbar\"\n          >\n            <button type=\"button\" className=\"act\">\n              {onRenderContentControlbarItem('multi_language')}\n            </button>\n          </Popover>\n        )}\n\n      {isShowIconSoundScene &&\n        onCheckIsShowContentControlbarItem('sound_scene_off') &&\n        onCheckIsShowContentControlbarItem('sound_scene_on') && (\n          <Tooltip\n            title={LANGUAGES[languageProject]?.controlbarSoundScene}\n            placement=\"top\"\n          >\n            <button type=\"button\" className=\"act\" onClick={onToggleSoundScene}>\n              {!isSoundOnScene\n                ? onRenderContentControlbarItem('sound_scene_on')\n                : onRenderContentControlbarItem('sound_scene_off')}\n            </button>\n          </Tooltip>\n        )}\n      {isShowIconRotate &&\n        onCheckIsShowContentControlbarItem('auto_rotate_off') &&\n        onCheckIsShowContentControlbarItem('auto_rotate_on') && (\n          <Tooltip\n            title={\n              isRotate\n                ? LANGUAGES[languageProject]?.controlbarStopRotate\n                : LANGUAGES[languageProject]?.controlbarStartRotate\n            }\n            placement=\"top\"\n          >\n            <button type=\"button\" className=\"act\" onClick={onToggleRotate}>\n              {!isRotate\n                ? onRenderContentControlbarItem('auto_rotate_on')\n                : onRenderContentControlbarItem('auto_rotate_off')}\n            </button>\n          </Tooltip>\n        )}\n      {isShowIconChangeScene &&\n        onCheckIsShowContentControlbarItem('auto_change_scene_off') &&\n        onCheckIsShowContentControlbarItem('auto_change_scene_on') && (\n          <Tooltip\n            title={\n              isChangeScene\n                ? LANGUAGES[languageProject]?.controlbarStopAutoPlayScene\n                : LANGUAGES[languageProject]?.controlbarStartAutoPlayScene\n            }\n            placement=\"top\"\n          >\n            <button\n              type=\"button\"\n              className=\"act\"\n              onClick={onChangeAutoChangeScene.bind(this, !isChangeScene)}\n            >\n              {!isChangeScene\n                ? onRenderContentControlbarItem('auto_change_scene_on')\n                : onRenderContentControlbarItem('auto_change_scene_off')}\n            </button>\n          </Tooltip>\n        )}\n\n      {isShowIconMultipleStaging &&\n        onCheckIsShowContentControlbarItem('multi_staging') && (\n          <Tooltip\n            title={\n              isActiveModeMultipleStaging\n                ? LANGUAGES[languageProject]\n                    ?.controlbarTurnOffModeMultipleStaging\n                : LANGUAGES[languageProject]\n                    ?.controlbarTurnOnModeMultipleStaging\n            }\n            placement=\"top\"\n          >\n            <button\n              type=\"button\"\n              className=\"act hide-on-mobile\"\n              onClick={() => onToggleModeMultipleStaging()}\n            >\n              {onRenderContentControlbarItem('multi_staging')}\n            </button>\n          </Tooltip>\n        )}\n\n      {onCheckIsShowContentControlbarItem('vr') && (\n        <Tooltip\n          title={LANGUAGES[languageProject]?.controlbarVRMode}\n          placement=\"top\"\n        >\n          <button type=\"button\" className=\"act\" onClick={onVR}>\n            {onRenderContentControlbarItem('vr')}\n          </button>\n        </Tooltip>\n      )}\n    </div>\n  );\n});\n\nexport default ControlbarCenter;\n"],"names":["CallToActionItemWrapper","styled","div","withConfig","props","scale","CallToActionsWrapper","offsetBottom","offsetLeft","offsetRight","useControlbarConfig","tourStats","useTourStats","sceneSelected","useSelector","selectSceneSelected","controlbarConfig","selectConfigControlbar","onCheckIsShowContentControlbarItem","useCallback","type","config","DEFAULT_VALUE_CONTROLBAR_CONFIG","isGyroscopeAvailable","isHide","media","subType","onRenderContentControlbarItem","icon","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","i","aria-hidden","className","concat","image","src","img","alt","useMemo","ListSceneWrapper","ControlbarWrapper","HeaderWrapper","ThemeCompactWrapper","ControlbarPopoverWrapper","CopyrightWrapper","ControlbarCenter","memo","param","LANGUAGES","krpanoRef","isServer","window","languages","_useTourEventState_","useTourEventState","isSoundOnScene","visibleDialogPostScene","isActiveModeMultipleStaging","languageProject","selectLanguageProject","useKrpano","onVR","onToFirstScene","isChangeScene","isShowIconChangeScene","onChangeAutoChangeScene","isRotate","isShowIconRotate","onToggleRotate","isShowIconInfoPlace","onShowInfoPlace","isShowIconInfoScene","onToggleInfoScene","isShowIconSoundScene","onToggleSoundScene","isShowIconMultipleStaging","onToggleModeMultipleStaging","languagesProject","onChangeLanguageProject","jsxs","Tooltip","title","controlbarFirstScene","placement","button","onClick","controlbarInfoTour","controlbarInfoScene","bind","_this","undefined","length","Popover","zIndex","content","ul","map","item","li","id","flag","name","overlayClassName","controlbarSoundScene","controlbarStopRotate","controlbarStartRotate","controlbarStopAutoPlayScene","controlbarStartAutoPlayScene","controlbarTurnOffModeMultipleStaging","controlbarTurnOnModeMultipleStaging","controlbarVRMode","__webpack_exports__"],"sourceRoot":""}