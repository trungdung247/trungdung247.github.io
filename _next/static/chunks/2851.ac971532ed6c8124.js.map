{"version":3,"file":"static/chunks/2851.ac971532ed6c8124.js","mappings":"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","sources":["webpack://_N_E/./containers/Home/components/Floorplan/styled.ts","webpack://_N_E/./containers/Home/components/Map/GoogleMap.tsx","webpack://_N_E/./containers/Home/components/Map/Popup.tsx","webpack://_N_E/<anon>"],"sourcesContent":["/* eslint-disable no-nested-ternary */\nimport styled, { css } from 'styled-components';\n\ninterface I_DisplayPanelFloorplan {\n  bgColor: string;\n  position: 'left' | 'right';\n}\n\ninterface I_DisplayBoxFloorplan {\n  bgColor: string;\n  position: 'bottomRight' | 'bottomLeft' | 'topLeft' | 'topRight';\n  offsetTop: number;\n  offsetBottom: number;\n  offsetLeft: number;\n  offsetRight: number;\n}\n\nexport const FloorplanWrapper = styled.div``;\n\nexport const ActionFloorplanWrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  top: 8px;\n  padding: 0 8px;\n  display: flex;\n  border-radius: 6px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 4;\n  pointer-events: none;\n  .--left {\n    background: rgb(0 0 0 / 0.5);\n    border-radius: 4px;\n    pointer-events: auto;\n  }\n  .--right {\n    display: flex;\n    align-items: center;\n    background: rgb(0 0 0 / 0.5);\n    border-radius: 4px;\n    overflow: hidden;\n    pointer-events: auto;\n  }\n  .action--item {\n    cursor: pointer;\n    transition: all 0.15s ease-out;\n    border: none;\n    padding: 0.25rem 0.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: none;\n    width: 2rem;\n    height: 2rem;\n    cursor: pointer;\n    color: #fff;\n    @media (hover: hover) and (pointer: fine) {\n      &:hover {\n        background: rgb(0 0 0 / 0.5);\n      }\n    }\n    &.--select {\n      width: max-content;\n    }\n    i {\n    }\n    &.--select {\n      i {\n        margin-right: 0px;\n        margin-left: 4px;\n      }\n    }\n    &:not(:last-child) {\n      border-right: 1px solid rgb(255 255 255 / 0.25);\n    }\n  }\n`;\n\nexport const FloorplanPanelWrapper = styled.div<I_DisplayPanelFloorplan>`\n  position: absolute;\n  width: 30%;\n  height: 100%;\n  transition: var(--transition-smooth);\n  display: flex;\n  align-items: center;\n  background: ${props => props.bgColor};\n  top: 0;\n  pointer-events: auto;\n  transform: none;\n  z-index: 10;\n  &.wall {\n    z-index: 2;\n  }\n  &.hide {\n    pointer-events: none;\n    z-index: -1;\n    ${props =>\n      props.position === 'right'\n        ? css`\n            transform: translateX(100%);\n          `\n        : css`\n            transform: translateX(-100%);\n          `}\n  }\n  &.basekrpano {\n  }\n  &.default {\n    ${props =>\n      props.position === 'right'\n        ? css`\n            right: 0;\n            top: 0;\n            height: 100%;\n          `\n        : css`\n            left: 0;\n            top: 94px;\n            height: calc(100% - 94px);\n          `}\n  }\n  &.custom1 {\n    height: calc(100% - 50px);\n  }\n  ${props =>\n    props.position === 'right'\n      ? css`\n          right: 0;\n        `\n      : css`\n          left: 0;\n        `}\n  .main {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n  }\n  .react-transform-wrapper {\n    overflow: visible;\n    z-index: 2;\n  }\n`;\n\nexport const FloorplanBoxWrapper = styled.div<I_DisplayBoxFloorplan>`\n  position: absolute;\n  transition: var(--transition-smooth);\n  background: radial-gradient(50% 50% at 50% 50%, #626262 0%, #000000 100%);\n  background: ${props => props.bgColor};\n  border-radius: 12px;\n  overflow: hidden;\n  border: 2px solid #fff;\n  transform: none;\n  z-index: 10;\n  &.hide {\n    opacity: 0;\n    z-index: -1;\n    pointer-events: none;\n    ${props =>\n      props.position === 'bottomLeft'\n        ? css`\n            transform: translateX(-4rem);\n          `\n        : props.position === 'topLeft'\n        ? css`\n            transform: translateX(-4rem);\n          `\n        : props.position === 'topRight'\n        ? css`\n            transform: translateX(4rem);\n          `\n        : css`\n            transform: translateX(4rem);\n          `}\n  }\n  &.basekrpano {\n    /* opacity: 0.5; */\n  }\n  &.default {\n  }\n  &.custom1 {\n  }\n  ${props =>\n    props.position === 'bottomLeft'\n      ? css`\n          bottom: ${props.offsetBottom}px;\n          left: ${props.offsetLeft}px;\n          right: unset;\n          top: unset;\n        `\n      : props.position === 'topLeft'\n      ? css`\n          top: ${props.offsetTop}px;\n          left: ${props.offsetLeft}px;\n          bottom: unset;\n          right: unset;\n        `\n      : props.position === 'topRight'\n      ? css`\n          top: ${props.offsetTop}px;\n          right: ${props.offsetRight}px;\n          bottom: unset;\n          left: unset;\n        `\n      : css`\n          bottom: ${props.offsetBottom}px;\n          right: ${props.offsetRight}px;\n          left: unset;\n          top: unset;\n        `}\n`;\n\nexport const ImageFloorplanWrapper = styled.div`\n  position: relative;\n  img {\n    min-width: 450px;\n    width: 100%;\n    height: auto;\n  }\n`;\n\nexport const MarkerWrapper = styled.div`\n  position: absolute;\n  width: 18px;\n  height: 18px;\n  background-color: var(--color-blue);\n  border: 2px solid transparent;\n  border-radius: 50%;\n  cursor: pointer;\n  transform: scale(0.75);\n  svg {\n    pointer-events: none;\n  }\n  &.active {\n    box-shadow: 0 0 0 8px rgb(0 0 0 / 0.1);\n  }\n`;\n\nexport const PopupWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  ${ActionFloorplanWrapper} {\n    justify-content: center;\n    position: absolute;\n    top: 1rem;\n    left: 0;\n  }\n  img {\n    width: 100%;\n    height: auto;\n  }\n  ${MarkerWrapper} {\n    width: 24px;\n    height: 24px;\n    background-color: #007aff;\n    border: 1px solid #007aff;\n    border-width: 2px;\n  }\n`;\n","import {\n  forwardRef,\n  memo,\n  Ref,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport dynamic from 'next/dynamic';\nimport { DEFAULT_VALUE_MAP_CONFIG } from '@containers/Home/constants';\nimport GoogleMapReact from 'google-map-react-concurrent';\nimport { selectListScene } from '../../selectors';\nimport { GoogleMapWrapper } from './styled';\nimport { I_MapConfig, I_Map, I_Scene } from '../../types';\n\nconst Marker = dynamic(() => import('./Marker'));\n\nexport type Type_RefFuncGoogleMap = {\n  onFitBounds: () => void;\n  onPanToMarker: (marker: I_Map['markers'][number]) => void;\n};\n\ninterface Props {\n  mapData?: I_Map;\n  sceneSelected?: I_Scene;\n  configMap?: I_MapConfig;\n  markerSelected?: I_Map['markers'][number];\n  onChangeScene: (scene: I_Scene) => void;\n}\n\nconst Map = forwardRef(\n  (\n    { configMap, sceneSelected, mapData, markerSelected, onChangeScene }: Props,\n    ref: Ref<Type_RefFuncGoogleMap>,\n  ) => {\n    const mapRef = useRef<any>(null!);\n    const [isMapLoaded, setIsMapLoaded] = useState(false);\n\n    const listScene = useSelector(selectListScene);\n\n    const configRadar = useMemo(\n      () => ({\n        ...DEFAULT_VALUE_MAP_CONFIG.radar,\n        ...configMap?.radar,\n      }),\n      [configMap?.radar],\n    );\n    const configMarker = useMemo(\n      () => ({\n        ...DEFAULT_VALUE_MAP_CONFIG.marker,\n        ...configMap?.marker,\n      }),\n      [configMap?.marker],\n    );\n\n    const customMapStyles = useMemo(() => {\n      try {\n        return configMap?.mapStyle\n          ? JSON.parse(configMap?.mapStyle || '[]')\n          : [];\n      } catch {\n        return [];\n      }\n    }, [configMap]);\n\n    const onFitBounds = useCallback(() => {\n      const _window = window as any;\n      if (_window.google) {\n        const bounds = new _window.google.maps.LatLngBounds();\n        mapData?.markers?.forEach(marker => {\n          bounds.extend({ lat: marker.lat, lng: marker.lng });\n        });\n        mapRef.current.fitBounds(bounds);\n      }\n    }, [mapData]);\n\n    const onPanToMarker = useCallback((marker: typeof markerSelected) => {\n      mapRef.current?.panTo({\n        lat: marker?.lat,\n        lng: marker?.lng,\n      });\n      mapRef.current?.setZoom(18);\n    }, []);\n\n    const onClickMarker = useCallback(\n      (_key, childProps) => {\n        if (childProps?.marker?.target_scene_id) {\n          const scene = listScene.filter(\n            item => item.id === childProps?.marker?.target_scene_id,\n          )[0];\n          if (scene) onChangeScene(scene);\n        }\n      },\n      [listScene, onChangeScene],\n    );\n\n    useEffect(() => {\n      /**\n       * NOTE: default view OR fit bounds\n       */\n      if (isMapLoaded) {\n        if (markerSelected) onPanToMarker(markerSelected);\n        else onFitBounds();\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isMapLoaded, markerSelected]);\n\n    useImperativeHandle(ref, () => ({\n      onFitBounds: () => onFitBounds(),\n      onPanToMarker: (marker: typeof markerSelected) => onPanToMarker(marker),\n    }));\n\n    return (\n      <GoogleMapWrapper>\n        <GoogleMapReact\n          bootstrapURLKeys={{\n            key:\n              process.env.NEXT_PUBLIC_GOOGLE_KEY ||\n              'AIzaSyAcwcJSrJ4_PqEIJoQCtC5RP988Eka0YE8',\n          }}\n          draggable\n          defaultCenter={{\n            lat: 0,\n            lng: 0,\n          }}\n          defaultZoom={12}\n          options={() => ({\n            minZoom: 2,\n            panControl: false,\n            mapTypeControl: false,\n            scrollwheel: true,\n            streetViewControl: false,\n            mapTypeId: configMap?.mapType,\n            disableDefaultUI: true,\n            styles: customMapStyles,\n          })}\n          scrollWheelZoom=\"center\"\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={({ map }) => {\n            mapRef.current = map;\n            setIsMapLoaded(true);\n          }}\n          onChildClick={onClickMarker}\n        >\n          {mapData?.markers.map(item => (\n            <Marker\n              key={item.id}\n              lat={item.lat}\n              lng={item.lng}\n              marker={item}\n              configRadar={configRadar}\n              configMarker={configMarker}\n              northRadar={sceneSelected?.north_ath || 0}\n              isTurnOnRadar={!!configRadar.isEnabled}\n              isActive={markerSelected?.id === item.id}\n            />\n          ))}\n        </GoogleMapReact>\n      </GoogleMapWrapper>\n    );\n  },\n);\n\nexport default memo(Map);\n","/* eslint-disable react/no-danger */\nimport dynamic from 'next/dynamic';\nimport { memo, useCallback, useRef } from 'react';\nimport { I_Map, I_MapConfig, I_Scene } from '@containers/Home/types';\nimport { useSelector } from 'react-redux';\nimport { selectSceneSelected } from '@containers/Home/selectors';\nimport { PopupWrapper } from './styled';\nimport GoogleMap, { Type_RefFuncGoogleMap } from './GoogleMap';\nimport { ActionFloorplanWrapper } from '../Floorplan/styled';\n\nconst DialogContainer = dynamic(() => import('@components/DialogContainer'));\n\ninterface Props {\n  visible: boolean;\n  onCancel: () => void;\n  mapData?: I_Map;\n  markerSelected?: I_Map['markers'][number];\n  configMap?: I_MapConfig;\n  onChangeScene: (scene: I_Scene) => void;\n}\n\nexport const Popup = ({\n  visible,\n  onCancel,\n  markerSelected,\n  mapData,\n  configMap,\n  onChangeScene,\n}: Props) => {\n  const googleMapRef = useRef<Type_RefFuncGoogleMap>(null!);\n\n  const sceneSelected = useSelector(selectSceneSelected);\n\n  const onCoverAllMarker = useCallback(() => {\n    googleMapRef.current?.onFitBounds();\n  }, []);\n\n  const onCenterToMarkerActive = useCallback(() => {\n    markerSelected && googleMapRef.current?.onPanToMarker(markerSelected);\n  }, [markerSelected]);\n\n  return (\n    <DialogContainer\n      visible={visible}\n      onCancel={onCancel}\n      maskClosable\n      centered\n      width=\"100vw\"\n      bodyStyle={{ maxWidth: '960px', width: '90vw' }}\n    >\n      <PopupWrapper>\n        <ActionFloorplanWrapper>\n          <div className=\"--left\" />\n          <div className=\"--right\">\n            <div className=\"action--item\" onClick={onCenterToMarkerActive}>\n              <i aria-hidden className=\"far fa-crosshairs\" />\n            </div>\n            <div className=\"action--item\" onClick={onCoverAllMarker}>\n              <i aria-hidden className=\"far fa-ball-pile\" />\n            </div>\n          </div>\n        </ActionFloorplanWrapper>\n        <GoogleMap\n          ref={googleMapRef}\n          mapData={mapData}\n          sceneSelected={sceneSelected}\n          markerSelected={markerSelected}\n          configMap={configMap}\n          onChangeScene={onChangeScene}\n        />\n      </PopupWrapper>\n    </DialogContainer>\n  );\n};\n\nexport default memo(Popup);\n"],"names":["FloorplanWrapper","styled","div","withConfig","ActionFloorplanWrapper","FloorplanPanelWrapper","props","bgColor","position","css","FloorplanBoxWrapper","offsetBottom","offsetLeft","offsetTop","offsetRight","ImageFloorplanWrapper","MarkerWrapper","PopupWrapper","Marker","dynamic","__webpack_require__","e","then","bind","Map","forwardRef","param","ref","configMap","sceneSelected","mapData","markerSelected","onChangeScene","mapRef","useRef","useState","isMapLoaded","setIsMapLoaded","listScene","useSelector","selectListScene","configRadar","useMemo","_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_9__","_","DEFAULT_VALUE_MAP_CONFIG","radar","configMarker","marker","customMapStyles","mapStyle","JSON","parse","onFitBounds","useCallback","_window","window","google","bounds","maps","LatLngBounds","markers","forEach","extend","lat","lng","current","fitBounds","onPanToMarker","panTo","setZoom","onClickMarker","_key","childProps","target_scene_id","scene","filter","item","id","useEffect","useImperativeHandle","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","GoogleMapWrapper","GoogleMapReact","bootstrapURLKeys","key","process","env","NEXT_PUBLIC_GOOGLE_KEY","draggable","defaultCenter","defaultZoom","options","minZoom","panControl","mapTypeControl","scrollwheel","streetViewControl","mapTypeId","mapType","disableDefaultUI","styles","scrollWheelZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","map","onChildClick","northRadar","north_ath","isTurnOnRadar","isEnabled","isActive","__webpack_exports__","Z","memo","DialogContainer","Promise","all","Popup","visible","onCancel","googleMapRef","selectSceneSelected","onCoverAllMarker","onCenterToMarkerActive","maskClosable","centered","width","bodyStyle","maxWidth","jsxs","className","onClick","i","aria-hidden","GoogleMap"],"sourceRoot":""}