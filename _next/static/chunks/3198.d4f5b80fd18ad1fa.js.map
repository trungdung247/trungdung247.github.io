{"version":3,"file":"static/chunks/3198.d4f5b80fd18ad1fa.js","mappings":"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","sources":["webpack://_N_E/./containers/Home/hook/useGetDetailPost.tsx","webpack://_N_E/./containers/Home/themes/ThemeSolid/PostScene.tsx","webpack://_N_E/./utils/xhrApi.ts","webpack://_N_E/<anon>"],"sourcesContent":["import { getDetailPost } from '@utils/xhrApi';\nimport { useSelector } from 'react-redux';\nimport { useEffect, useCallback, useMemo, useState } from 'react';\nimport { I_Post } from '../types';\nimport {\n  selectListPostUsedOnTour,\n  selectLanguageProjectSelected,\n} from '../selectors';\n\ninterface Props {\n  idPost?: string;\n}\n\nexport const useGetDetailPost = ({ idPost = '' }: Props) => {\n  const listPostUsedOnTour = useSelector(selectListPostUsedOnTour);\n  const languageProjectSelected = useSelector(selectLanguageProjectSelected);\n\n  const [loading, setLoading] = useState(false);\n  const [detailPost, setDetailPost] = useState<I_Post | undefined>(undefined);\n\n  const onGetDetailPost = useCallback(async () => {\n    setLoading(true);\n    try {\n      let post = listPostUsedOnTour.find(item => item.id === idPost);\n      if (!post) {\n        const { data } = await getDetailPost(idPost);\n        post = data.data;\n      }\n      setDetailPost(post);\n    } catch (err) {\n      console.log(err);\n      setDetailPost(undefined);\n    } finally {\n      setLoading(false);\n    }\n  }, [idPost, listPostUsedOnTour]);\n\n  useEffect(() => {\n    if (idPost) onGetDetailPost();\n    else setDetailPost(undefined);\n    return () => {\n      setLoading(false);\n      setDetailPost(undefined);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [idPost, languageProjectSelected]);\n\n  return useMemo(\n    () => ({ loading, detailPost, onGetDetailPost }),\n    [loading, detailPost, onGetDetailPost],\n  );\n};\n","/* eslint-disable react/no-danger */\nimport {\n  useTourEventState,\n  useTourStats,\n} from '@containers/Home/global/TourStats';\nimport { useGetDetailPost } from '@containers/Home/hook/useGetDetailPost';\nimport { selectSceneSelected } from '@containers/Home/selectors';\nimport { memo, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport dynamic from 'next/dynamic';\nimport { useKrpano } from '@containers/Home/hook/useKrpano';\nimport { PostSceneWrapper } from './styled';\n\nconst LoadingContainer = dynamic(() => import('@components/LoadingContainer'));\n\nconst PostScene = memo(() => {\n  const sceneSelected = useSelector(selectSceneSelected);\n\n  const [tourStats] = useTourStats('stats');\n  const [tourEventState, setTourEventState] = useTourEventState('state');\n\n  const { onToggleInfoScene, onCloseDialogPostScene } = useKrpano({\n    krpanoRef: null,\n  });\n\n  const { loading, detailPost } = useGetDetailPost({\n    idPost: tourEventState.idPostSceneSelected,\n  });\n\n  useEffect(() => {\n    if (sceneSelected?.post) onToggleInfoScene(true);\n    else {\n      onToggleInfoScene(false);\n      setTourEventState(prev => ({ ...prev, idPostSceneSelected: '' }));\n    }\n    return () => {\n      onToggleInfoScene(false);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sceneSelected?.id]);\n\n  return (\n    <PostSceneWrapper\n      id=\"themePostScene\"\n      className={`${tourEventState.visibleDialogPostScene ? 'active' : ''}`}\n      isShowControlbar={tourStats.isShowControlbar}\n    >\n      <LoadingContainer loading={loading}>\n        <div className=\"popInfoContentHead\">\n          <h4>{sceneSelected?.title}</h4>\n          <i\n            className=\"popInfoClose fal fa-times\"\n            onClick={onCloseDialogPostScene}\n          />\n        </div>\n        <div className=\"popInfoArticle\">\n          <div\n            className=\"content ctn__html sun-editor sun-editor-editable\"\n            dangerouslySetInnerHTML={{ __html: detailPost?.content || '' }}\n          />\n        </div>\n      </LoadingContainer>\n    </PostSceneWrapper>\n  );\n});\n\nexport default PostScene;\n","import { BaseXHR } from './axios';\n\nexport const getDetailPost = id => BaseXHR.$get('/post/getPublish', { id });\n"],"names":["useGetDetailPost","param","idPost","_param_idPost","listPostUsedOnTour","useSelector","selectListPostUsedOnTour","languageProjectSelected","selectLanguageProjectSelected","useState","loading","setLoading","undefined","detailPost","setDetailPost","onGetDetailPost","useCallback","_swc_helpers_async_to_generator__WEBPACK_IMPORTED_MODULE_5__","_","post","find","item","id","getDetailPost","data","sent","err","useEffect","useMemo","LoadingContainer","dynamic","Promise","resolve","then","__webpack_require__","bind","PostScene","memo","sceneSelected","selectSceneSelected","tourStats","useTourStats","useTourEventState","tourEventState","setTourEventState","useKrpano","krpanoRef","onToggleInfoScene","onCloseDialogPostScene","idPostSceneSelected","prev","_swc_helpers_object_spread_props__WEBPACK_IMPORTED_MODULE_10__","_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_11__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","PostSceneWrapper","className","concat","visibleDialogPostScene","isShowControlbar","jsxs","div","h4","title","i","onClick","dangerouslySetInnerHTML","__html","content","__webpack_exports__","BaseXHR","$get"],"sourceRoot":""}