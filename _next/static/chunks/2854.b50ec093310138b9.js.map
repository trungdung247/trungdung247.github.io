{"version":3,"file":"static/chunks/2854.b50ec093310138b9.js","mappings":"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","sources":["webpack://_N_E/./containers/Home/hook/useGetDetailPost.tsx","webpack://_N_E/./containers/Home/themes/ThemeDefault/Header.tsx","webpack://_N_E/./utils/xhrApi.ts","webpack://_N_E/<anon>"],"sourcesContent":["import { getDetailPost } from '@utils/xhrApi';\nimport { useSelector } from 'react-redux';\nimport { useEffect, useCallback, useMemo, useState } from 'react';\nimport { I_Post } from '../types';\nimport {\n  selectListPostUsedOnTour,\n  selectLanguageProjectSelected,\n} from '../selectors';\n\ninterface Props {\n  idPost?: string;\n}\n\nexport const useGetDetailPost = ({ idPost = '' }: Props) => {\n  const listPostUsedOnTour = useSelector(selectListPostUsedOnTour);\n  const languageProjectSelected = useSelector(selectLanguageProjectSelected);\n\n  const [loading, setLoading] = useState(false);\n  const [detailPost, setDetailPost] = useState<I_Post | undefined>(undefined);\n\n  const onGetDetailPost = useCallback(async () => {\n    setLoading(true);\n    try {\n      let post = listPostUsedOnTour.find(item => item.id === idPost);\n      if (!post) {\n        const { data } = await getDetailPost(idPost);\n        post = data.data;\n      }\n      setDetailPost(post);\n    } catch (err) {\n      console.log(err);\n      setDetailPost(undefined);\n    } finally {\n      setLoading(false);\n    }\n  }, [idPost, listPostUsedOnTour]);\n\n  useEffect(() => {\n    if (idPost) onGetDetailPost();\n    else setDetailPost(undefined);\n    return () => {\n      setLoading(false);\n      setDetailPost(undefined);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [idPost, languageProjectSelected]);\n\n  return useMemo(\n    () => ({ loading, detailPost, onGetDetailPost }),\n    [loading, detailPost, onGetDetailPost],\n  );\n};\n","/* eslint-disable react/no-danger */\nimport { useTourEventState } from '@containers/Home/global/TourStats';\nimport { useGetDetailPost } from '@containers/Home/hook/useGetDetailPost';\nimport { useKrpano } from '@containers/Home/hook/useKrpano';\nimport {\n  selectDetailProject,\n  selectSceneSelected,\n  selectThemeConfigGlobal,\n} from '@containers/Home/selectors';\nimport dynamic from 'next/dynamic';\nimport React, { useEffect, memo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { HeaderWrapper } from './styled';\n\nconst Logo = dynamic(() => import('@containers/Home/components/Logo'));\nconst LoadingContainer = dynamic(() => import('@components/LoadingContainer'));\ninterface Props {\n  isShowListScene: boolean;\n}\n\nexport const Header = memo(({ isShowListScene }: Props) => {\n  const detailProject = useSelector(selectDetailProject);\n  const sceneSelected = useSelector(selectSceneSelected);\n  const themeConfig = useSelector(selectThemeConfigGlobal);\n\n  const [tourEventState] = useTourEventState('state');\n  const { onToggleInfoScene, onCloseDialogPostScene } = useKrpano({\n    krpanoRef: null,\n  });\n\n  const { loading, detailPost } = useGetDetailPost({\n    idPost: tourEventState.idPostSceneSelected,\n  });\n\n  useEffect(() => {\n    if (sceneSelected?.post) onToggleInfoScene(true);\n    else onToggleInfoScene(false);\n    return () => {\n      onToggleInfoScene(false);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sceneSelected?.id]);\n\n  return (\n    <HeaderWrapper\n      id=\"themeHeader\"\n      className={`${\n        themeConfig?.selected === 'defaultNew' ? 'variant-palette' : ''\n      } topInfo ${isShowListScene ? 'showSidebar' : ''}`}\n    >\n      <Logo />\n      <div className=\"--info\">\n        <h1 className=\"--projectTitle\">{detailProject?.title || '---'}</h1>\n        {!!detailProject?.subTitle && (\n          <p className=\"address\">{detailProject?.subTitle}</p>\n        )}\n\n        <div className=\"popInfo\">\n          <button\n            className=\"popInfoToggle\"\n            type=\"button\"\n            onFocus={onToggleInfoScene.bind(this, true)}\n            onMouseOver={onToggleInfoScene.bind(this, true)}\n          >\n            {sceneSelected?.title}\n            {sceneSelected?.post && (\n              <span>\n                <i aria-hidden className=\"fas fa-info\" />\n              </span>\n            )}\n          </button>\n          <div\n            className={`popInfoContent ${\n              tourEventState.visibleDialogPostScene ? 'active' : ''\n            }`}\n          >\n            <LoadingContainer loading={loading}>\n              <div className=\"popInfoContentHead\">\n                <h4>{sceneSelected?.title}</h4>\n                <i\n                  className=\"popInfoClose fal fa-times\"\n                  onClick={onCloseDialogPostScene}\n                />\n              </div>\n              <div className=\"popInfoArticle\">\n                <div\n                  dangerouslySetInnerHTML={{\n                    __html: detailPost?.content || '',\n                  }}\n                />\n              </div>\n            </LoadingContainer>\n          </div>\n        </div>\n      </div>\n    </HeaderWrapper>\n  );\n});\n\nexport default Header;\n","import { BaseXHR } from './axios';\n\nexport const getDetailPost = id => BaseXHR.$get('/post/getPublish', { id });\n"],"names":["useGetDetailPost","param","idPost","_param_idPost","listPostUsedOnTour","useSelector","selectListPostUsedOnTour","languageProjectSelected","selectLanguageProjectSelected","useState","loading","setLoading","undefined","detailPost","setDetailPost","onGetDetailPost","useCallback","_swc_helpers_async_to_generator__WEBPACK_IMPORTED_MODULE_5__","_","post","find","item","id","getDetailPost","data","sent","err","useEffect","useMemo","Logo","dynamic","__webpack_require__","e","then","bind","LoadingContainer","Promise","resolve","Header","memo","isShowListScene","detailProject","selectDetailProject","sceneSelected","selectSceneSelected","themeConfig","selectThemeConfigGlobal","tourEventState","useTourEventState","useKrpano","krpanoRef","onToggleInfoScene","onCloseDialogPostScene","idPostSceneSelected","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","HeaderWrapper","className","selected","concat","jsx","div","h1","title","subTitle","p","button","type","onFocus","_this","onMouseOver","span","i","aria-hidden","visibleDialogPostScene","h4","onClick","dangerouslySetInnerHTML","__html","content","__webpack_exports__","BaseXHR","$get"],"sourceRoot":""}