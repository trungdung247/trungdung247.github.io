{"version":3,"file":"static/chunks/8481.988a9cfee57a4431.js","mappings":"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","sources":["webpack://_N_E/./containers/Home/components/Floorplan/Popup.tsx","webpack://_N_E/<anon>"],"sourcesContent":["/* eslint-disable react/no-danger */\nimport dynamic from 'next/dynamic';\nimport { memo, useCallback, useMemo } from 'react';\nimport {\n  I_Floorplan,\n  I_FloorplanConfig,\n  I_Scene,\n} from '@containers/Home/types';\nimport { DEFAULT_VALUE_FLOORPLAN_CONFIG } from '@containers/Home/constants';\nimport { useSelector } from 'react-redux';\nimport {\n  selectListScene,\n  selectSceneSelected,\n} from '@containers/Home/selectors';\nimport { PopupWrapper, ActionFloorplanWrapper } from './styled';\n\nconst Marker = dynamic(() => import('./Marker'));\nconst DialogContainer = dynamic(() => import('@components/DialogContainer'));\nconst DropdownContainer = dynamic(\n  () => import('@components/DropdownContainer'),\n);\n\ninterface Props {\n  visible: boolean;\n  onCancel: () => void;\n  listFloorplan?: I_Floorplan[];\n  floorplanSelected?: I_Floorplan;\n  markerSelected?: I_Floorplan['markers'][number];\n  onChangeFloorplan: ({ type }) => void;\n  configFloorplan?: I_FloorplanConfig;\n  onChangeScene: (scene: I_Scene) => void;\n}\n\nexport const Popup = ({\n  visible,\n  onCancel,\n  listFloorplan,\n  markerSelected,\n  floorplanSelected,\n  configFloorplan,\n  onChangeFloorplan,\n  onChangeScene,\n}: Props) => {\n  const listScene = useSelector(selectListScene);\n  const sceneSelected = useSelector(selectSceneSelected);\n\n  const configRadar = useMemo(\n    () => ({\n      ...DEFAULT_VALUE_FLOORPLAN_CONFIG.radar,\n      ...configFloorplan?.radar,\n    }),\n    [configFloorplan?.radar],\n  );\n  const configMarker = useMemo(\n    () => ({\n      ...DEFAULT_VALUE_FLOORPLAN_CONFIG.marker,\n      ...configFloorplan?.marker,\n    }),\n    [configFloorplan?.marker],\n  );\n\n  const onClickMarker = useCallback(\n    marker => {\n      const scene = listScene.filter(\n        item => item.id === marker.target_scene_id,\n      )[0];\n      if (scene) onChangeScene(scene);\n    },\n    [listScene, onChangeScene],\n  );\n\n  return (\n    <DialogContainer\n      visible={visible}\n      onCancel={onCancel}\n      maskClosable\n      centered\n      width=\"650px\"\n      bodyStyle={{ maxWidth: '100%', width: '100%' }}\n    >\n      <PopupWrapper>\n        <ActionFloorplanWrapper>\n          <div className=\"--left\">\n            <DropdownContainer\n              menuActive={[floorplanSelected?.id || '']}\n              listMenu={(listFloorplan || []).map(floorplan => ({\n                type: floorplan.id || '',\n                classIcon: 'far fa-layer-group',\n                label: floorplan.name || '',\n              }))}\n              onClick={onChangeFloorplan}\n            >\n              <div className=\"action--item --select\">\n                <span>{floorplanSelected?.name || '---'}</span>\n                <i aria-hidden className=\"fas fa-caret-down\" />\n              </div>\n            </DropdownContainer>\n          </div>\n        </ActionFloorplanWrapper>\n        <img src={floorplanSelected?.src} alt=\"test\" />\n        {floorplanSelected?.markers?.map(marker => (\n          <Marker\n            key={marker.id}\n            marker={marker}\n            onClick={onClickMarker}\n            configRadar={configRadar}\n            configMarker={configMarker}\n            northRadar={sceneSelected?.north_ath || 0}\n            isTurnOnRadar={!!configRadar.isEnabled}\n            isActive={markerSelected?.id === marker.id}\n          />\n        ))}\n      </PopupWrapper>\n    </DialogContainer>\n  );\n};\n\nexport default memo(Popup);\n"],"names":["Marker","dynamic","__webpack_require__","e","then","bind","DialogContainer","Promise","all","DropdownContainer","Popup","param","floorplanSelected","visible","onCancel","listFloorplan","markerSelected","configFloorplan","onChangeFloorplan","onChangeScene","listScene","useSelector","selectListScene","sceneSelected","selectSceneSelected","configRadar","useMemo","_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_7__","_","DEFAULT_VALUE_FLOORPLAN_CONFIG","radar","configMarker","marker","onClickMarker","useCallback","scene","filter","item","id","target_scene_id","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","maskClosable","centered","width","bodyStyle","maxWidth","jsxs","PopupWrapper","ActionFloorplanWrapper","div","className","menuActive","listMenu","map","floorplan","type","classIcon","label","name","onClick","span","i","aria-hidden","img","src","alt","markers","northRadar","north_ath","isTurnOnRadar","isEnabled","isActive","__webpack_exports__","memo"],"sourceRoot":""}