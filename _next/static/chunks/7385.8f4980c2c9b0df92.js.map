{"version":3,"file":"static/chunks/7385.8f4980c2c9b0df92.js","mappings":"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","sources":["webpack://_N_E/./containers/Home/components/Floorplan/styled.ts","webpack://_N_E/./containers/Home/components/Map/Popup.tsx","webpack://_N_E/<anon>"],"sourcesContent":["/* eslint-disable no-nested-ternary */\nimport styled, { css } from 'styled-components';\n\ninterface I_DisplayPanelFloorplan {\n  bgColor: string;\n  position: 'left' | 'right';\n}\n\ninterface I_DisplayBoxFloorplan {\n  bgColor: string;\n  position: 'bottomRight' | 'bottomLeft' | 'topLeft' | 'topRight';\n  offsetTop: number;\n  offsetBottom: number;\n  offsetLeft: number;\n  offsetRight: number;\n}\n\nexport const FloorplanWrapper = styled.div``;\n\nexport const ActionFloorplanWrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  top: 8px;\n  padding: 0 8px;\n  display: flex;\n  border-radius: 6px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 4;\n  pointer-events: none;\n  .--left {\n    background: rgb(0 0 0 / 0.5);\n    border-radius: 4px;\n    pointer-events: auto;\n  }\n  .--right {\n    display: flex;\n    align-items: center;\n    background: rgb(0 0 0 / 0.5);\n    border-radius: 4px;\n    overflow: hidden;\n    pointer-events: auto;\n  }\n  .action--item {\n    cursor: pointer;\n    transition: all 0.15s ease-out;\n    border: none;\n    padding: 0.25rem 0.5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: none;\n    width: 2rem;\n    height: 2rem;\n    cursor: pointer;\n    color: #fff;\n    @media (hover: hover) and (pointer: fine) {\n      &:hover {\n        background: rgb(0 0 0 / 0.5);\n      }\n    }\n    &.--select {\n      width: max-content;\n    }\n    i {\n    }\n    &.--select {\n      i {\n        margin-right: 0px;\n        margin-left: 4px;\n      }\n    }\n    &:not(:last-child) {\n      border-right: 1px solid rgb(255 255 255 / 0.25);\n    }\n  }\n`;\n\nexport const FloorplanPanelWrapper = styled.div<I_DisplayPanelFloorplan>`\n  position: absolute;\n  width: 30%;\n  height: 100%;\n  transition: var(--transition-smooth);\n  display: flex;\n  align-items: center;\n  background: ${props => props.bgColor};\n  top: 0;\n  pointer-events: auto;\n  transform: none;\n  z-index: 10;\n  &.wall {\n    z-index: 2;\n  }\n  &.hide {\n    pointer-events: none;\n    z-index: -1;\n    ${props =>\n      props.position === 'right'\n        ? css`\n            transform: translateX(100%);\n          `\n        : css`\n            transform: translateX(-100%);\n          `}\n  }\n  &.basekrpano {\n  }\n  &.default {\n    ${props =>\n      props.position === 'right'\n        ? css`\n            right: 0;\n            top: 0;\n            height: 100%;\n          `\n        : css`\n            left: 0;\n            top: 94px;\n            height: calc(100% - 94px);\n          `}\n  }\n  &.custom1 {\n    height: calc(100% - 50px);\n  }\n  ${props =>\n    props.position === 'right'\n      ? css`\n          right: 0;\n        `\n      : css`\n          left: 0;\n        `}\n  .main {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n  }\n  .react-transform-wrapper {\n    overflow: visible;\n    z-index: 2;\n  }\n`;\n\nexport const FloorplanBoxWrapper = styled.div<I_DisplayBoxFloorplan>`\n  position: absolute;\n  transition: var(--transition-smooth);\n  background: radial-gradient(50% 50% at 50% 50%, #626262 0%, #000000 100%);\n  background: ${props => props.bgColor};\n  border-radius: 12px;\n  overflow: hidden;\n  border: 2px solid #fff;\n  transform: none;\n  z-index: 10;\n  &.hide {\n    opacity: 0;\n    z-index: -1;\n    pointer-events: none;\n    ${props =>\n      props.position === 'bottomLeft'\n        ? css`\n            transform: translateX(-4rem);\n          `\n        : props.position === 'topLeft'\n        ? css`\n            transform: translateX(-4rem);\n          `\n        : props.position === 'topRight'\n        ? css`\n            transform: translateX(4rem);\n          `\n        : css`\n            transform: translateX(4rem);\n          `}\n  }\n  &.basekrpano {\n    /* opacity: 0.5; */\n  }\n  &.default {\n  }\n  &.custom1 {\n  }\n  ${props =>\n    props.position === 'bottomLeft'\n      ? css`\n          bottom: ${props.offsetBottom}px;\n          left: ${props.offsetLeft}px;\n          right: unset;\n          top: unset;\n        `\n      : props.position === 'topLeft'\n      ? css`\n          top: ${props.offsetTop}px;\n          left: ${props.offsetLeft}px;\n          bottom: unset;\n          right: unset;\n        `\n      : props.position === 'topRight'\n      ? css`\n          top: ${props.offsetTop}px;\n          right: ${props.offsetRight}px;\n          bottom: unset;\n          left: unset;\n        `\n      : css`\n          bottom: ${props.offsetBottom}px;\n          right: ${props.offsetRight}px;\n          left: unset;\n          top: unset;\n        `}\n`;\n\nexport const ImageFloorplanWrapper = styled.div`\n  position: relative;\n  img {\n    min-width: 450px;\n    width: 100%;\n    height: auto;\n  }\n`;\n\nexport const MarkerWrapper = styled.div`\n  position: absolute;\n  width: 18px;\n  height: 18px;\n  background-color: var(--color-blue);\n  border: 2px solid transparent;\n  border-radius: 50%;\n  cursor: pointer;\n  transform: scale(0.75);\n  svg {\n    pointer-events: none;\n  }\n  &.active {\n    box-shadow: 0 0 0 8px rgb(0 0 0 / 0.1);\n  }\n`;\n\nexport const PopupWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  ${ActionFloorplanWrapper} {\n    justify-content: center;\n    position: absolute;\n    top: 1rem;\n    left: 0;\n  }\n  img {\n    width: 100%;\n    height: auto;\n  }\n  ${MarkerWrapper} {\n    width: 24px;\n    height: 24px;\n    background-color: #007aff;\n    border: 1px solid #007aff;\n    border-width: 2px;\n  }\n`;\n","/* eslint-disable react/no-danger */\nimport dynamic from 'next/dynamic';\nimport { memo, useCallback, useRef } from 'react';\nimport { I_Map, I_MapConfig, I_Scene } from '@containers/Home/types';\nimport { useSelector } from 'react-redux';\nimport { selectSceneSelected } from '@containers/Home/selectors';\nimport { PopupWrapper } from './styled';\nimport GoogleMap, { Type_RefFuncGoogleMap } from './GoogleMap';\nimport { ActionFloorplanWrapper } from '../Floorplan/styled';\n\nconst DialogContainer = dynamic(() => import('@components/DialogContainer'));\n\ninterface Props {\n  visible: boolean;\n  onCancel: () => void;\n  mapData?: I_Map;\n  markerSelected?: I_Map['markers'][number];\n  configMap?: I_MapConfig;\n  onChangeScene: (scene: I_Scene) => void;\n}\n\nexport const Popup = ({\n  visible,\n  onCancel,\n  markerSelected,\n  mapData,\n  configMap,\n  onChangeScene,\n}: Props) => {\n  const googleMapRef = useRef<Type_RefFuncGoogleMap>(null!);\n\n  const sceneSelected = useSelector(selectSceneSelected);\n\n  const onCoverAllMarker = useCallback(() => {\n    googleMapRef.current?.onFitBounds();\n  }, []);\n\n  const onCenterToMarkerActive = useCallback(() => {\n    markerSelected && googleMapRef.current?.onPanToMarker(markerSelected);\n  }, [markerSelected]);\n\n  return (\n    <DialogContainer\n      visible={visible}\n      onCancel={onCancel}\n      maskClosable\n      centered\n      width=\"100vw\"\n      bodyStyle={{ maxWidth: '960px', width: '90vw' }}\n    >\n      <PopupWrapper>\n        <ActionFloorplanWrapper>\n          <div className=\"--left\" />\n          <div className=\"--right\">\n            <div className=\"action--item\" onClick={onCenterToMarkerActive}>\n              <i aria-hidden className=\"far fa-crosshairs\" />\n            </div>\n            <div className=\"action--item\" onClick={onCoverAllMarker}>\n              <i aria-hidden className=\"far fa-ball-pile\" />\n            </div>\n          </div>\n        </ActionFloorplanWrapper>\n        <GoogleMap\n          ref={googleMapRef}\n          mapData={mapData}\n          sceneSelected={sceneSelected}\n          markerSelected={markerSelected}\n          configMap={configMap}\n          onChangeScene={onChangeScene}\n        />\n      </PopupWrapper>\n    </DialogContainer>\n  );\n};\n\nexport default memo(Popup);\n"],"names":["FloorplanWrapper","styled","div","withConfig","ActionFloorplanWrapper","FloorplanPanelWrapper","props","bgColor","position","css","FloorplanBoxWrapper","offsetBottom","offsetLeft","offsetTop","offsetRight","ImageFloorplanWrapper","MarkerWrapper","PopupWrapper","DialogContainer","dynamic","Promise","all","__webpack_require__","e","then","bind","Popup","param","visible","onCancel","markerSelected","mapData","configMap","onChangeScene","googleMapRef","useRef","sceneSelected","useSelector","selectSceneSelected","onCoverAllMarker","useCallback","current","onFitBounds","onCenterToMarkerActive","onPanToMarker","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","maskClosable","centered","width","bodyStyle","maxWidth","jsxs","className","onClick","i","aria-hidden","GoogleMap","ref","__webpack_exports__","memo"],"sourceRoot":""}